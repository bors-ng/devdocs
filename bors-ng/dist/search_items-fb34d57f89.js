searchNodes=[{"doc":"Functionality that is specific to administrators. Administrators are users with the is_admin flag set. Ensuring non-administrators can't get here is done in BorsNG.Router . Administrators have the ability to step outside the permissions and edit any repo, or delete it if they wish.","ref":"BorsNG.AdminController.html","title":"BorsNG.AdminController","type":"module"},{"doc":"","ref":"BorsNG.AdminController.html#crashes/2","title":"BorsNG.AdminController.crashes/2","type":"function"},{"doc":"","ref":"BorsNG.AdminController.html#dup_patches/2","title":"BorsNG.AdminController.dup_patches/2","type":"function"},{"doc":"","ref":"BorsNG.AdminController.html#index/2","title":"BorsNG.AdminController.index/2","type":"function"},{"doc":"","ref":"BorsNG.AdminController.html#orphans/2","title":"BorsNG.AdminController.orphans/2","type":"function"},{"doc":"","ref":"BorsNG.AdminController.html#project_by_name/2","title":"BorsNG.AdminController.project_by_name/2","type":"function"},{"doc":"","ref":"BorsNG.AdminController.html#synchronize_all_installations/2","title":"BorsNG.AdminController.synchronize_all_installations/2","type":"function"},{"doc":"The view portion of all administrator-specific functions, such as looking up an arbitrary project by name, or showing the results of red-flag queries.","ref":"BorsNG.AdminView.html","title":"BorsNG.AdminView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.AdminView.html#__resource__/0","title":"BorsNG.AdminView.__resource__/0","type":"function"},{"doc":"","ref":"BorsNG.AdminView.html#htmlify_naive_datetime/1","title":"BorsNG.AdminView.htmlify_naive_datetime/1","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.AdminView.html#render/2","title":"BorsNG.AdminView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.AdminView.html#template_not_found/2","title":"BorsNG.AdminView.template_not_found/2","type":"function"},{"doc":"","ref":"BorsNG.AdminView.html#truncate_commit/1","title":"BorsNG.AdminView.truncate_commit/1","type":"function"},{"doc":"The top-level OPT application for Bors-NG.","ref":"BorsNG.Application.html","title":"BorsNG.Application","type":"module"},{"doc":"Callback implementation for Application.start/2 .","ref":"BorsNG.Application.html#start/2","title":"BorsNG.Application.start/2","type":"function"},{"doc":"Storage for different runtime constants, basically config evaled in runtime","ref":"BorsNG.Attrs.html","title":"BorsNG.Attrs","type":"module"},{"doc":"","ref":"BorsNG.Attrs.html#get_github_integration_url/0","title":"BorsNG.Attrs.get_github_integration_url/0","type":"function"},{"doc":"","ref":"BorsNG.Attrs.html#set_github_app_public_link/1","title":"BorsNG.Attrs.set_github_app_public_link/1","type":"function"},{"doc":"","ref":"BorsNG.Attrs.html#start_link/0","title":"BorsNG.Attrs.start_link/0","type":"function"},{"doc":"Routing glue to allow authenticating with GitHub oAuth. BorsNG.Router ensures that users have to go through here. When a user is authenticated, the following items are added to the session :current_user the ID of the authenticated user in BorsNG.User . This controller will create a user if none exists. :github_access_token the token to use when accessing the GitHub API.","ref":"BorsNG.AuthController.html","title":"BorsNG.AuthController","type":"module"},{"doc":"This action, which is reached at /auth/:provider/callback , is the the callback URL that the OAuth2 provider will redirect the user back to with a code . Once here, we will request a permanent access token, allowing us to act on the user's behalf through the GitHub REST API. We also add a row to our database, if it does not already exist.","ref":"BorsNG.AuthController.html#callback/2","title":"BorsNG.AuthController.callback/2","type":"function"},{"doc":"This action is reached via /auth/:provider and redirects to the OAuth2 provider based on the chosen strategy.","ref":"BorsNG.AuthController.html#index/2","title":"BorsNG.AuthController.index/2","type":"function"},{"doc":"","ref":"BorsNG.AuthController.html#logout/2","title":"BorsNG.AuthController.logout/2","type":"function"},{"doc":"This action converts a cookie to a socket token. Socket tokens are usable for one hour before they must be reset.","ref":"BorsNG.AuthController.html#socket_token/2","title":"BorsNG.AuthController.socket_token/2","type":"function"},{"doc":"The view glue to perform oAuth authentication, and to get tokens for sockets and APIs from that.","ref":"BorsNG.AuthView.html","title":"BorsNG.AuthView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.AuthView.html#__resource__/0","title":"BorsNG.AuthView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.AuthView.html#render/2","title":"BorsNG.AuthView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.AuthView.html#template_not_found/2","title":"BorsNG.AuthView.template_not_found/2","type":"function"},{"doc":"The controller for the batches This will either show a batch detail page","ref":"BorsNG.BatchController.html","title":"BorsNG.BatchController","type":"module"},{"doc":"","ref":"BorsNG.BatchController.html#show/2","title":"BorsNG.BatchController.show/2","type":"function"},{"doc":"Batch details page","ref":"BorsNG.BatchView.html","title":"BorsNG.BatchView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.BatchView.html#__resource__/0","title":"BorsNG.BatchView.__resource__/0","type":"function"},{"doc":"","ref":"BorsNG.BatchView.html#htmlify_naive_datetime/1","title":"BorsNG.BatchView.htmlify_naive_datetime/1","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.BatchView.html#render/2","title":"BorsNG.BatchView.render/2","type":"function"},{"doc":"","ref":"BorsNG.BatchView.html#stringify_state/1","title":"BorsNG.BatchView.stringify_state/1","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.BatchView.html#template_not_found/2","title":"BorsNG.BatchView.template_not_found/2","type":"function"},{"doc":"","ref":"BorsNG.CodeOwnerParser.html","title":"BorsNG.CodeOwnerParser","type":"module"},{"doc":"","ref":"BorsNG.CodeOwnerParser.html#list_required_reviews/2","title":"BorsNG.CodeOwnerParser.list_required_reviews/2","type":"function"},{"doc":"","ref":"BorsNG.CodeOwnerParser.html#parse_file/1","title":"BorsNG.CodeOwnerParser.parse_file/1","type":"function"},{"doc":"","ref":"BorsNG.CodeOwnerParser.html#process_double_asterisk/2","title":"BorsNG.CodeOwnerParser.process_double_asterisk/2","type":"function"},{"doc":"","ref":"BorsNG.CodeOwners.html","title":"BorsNG.CodeOwners","type":"module"},{"doc":"","ref":"BorsNG.CodeOwners.html#t:t/0","title":"BorsNG.CodeOwners.t/0","type":"type"},{"doc":"","ref":"BorsNG.CodeOwners.html#t:tjson/0","title":"BorsNG.CodeOwners.tjson/0","type":"type"},{"doc":"Resolve magic comments. try The bors comment CLI allows parameters to be passed to try. Assuming the activation phrase is &quot;bors try&quot;, you can do things like this: bors try -- layout And the commit will come out like: Try #13: --layout Your build scripts should then inspect the commit message to pull out the commands.","ref":"BorsNG.Command.html","title":"BorsNG.Command","type":"module"},{"doc":"","ref":"BorsNG.Command.html#delegate_to/2","title":"BorsNG.Command.delegate_to/2","type":"function"},{"doc":"If the Patch is not already in this struct, fetch it. This will not re-sync from GitHub unless it isn't even in the database.","ref":"BorsNG.Command.html#fetch_patch/1","title":"BorsNG.Command.fetch_patch/1","type":"function"},{"doc":"If the GitHub PR is not already in this struct, fetch it.","ref":"BorsNG.Command.html#fetch_pr/1","title":"BorsNG.Command.fetch_pr/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#log/2","title":"BorsNG.Command.log/2","type":"function"},{"doc":"Parse a comment for bors commands.","ref":"BorsNG.Command.html#parse/1","title":"BorsNG.Command.parse/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#parse_activation_args/1","title":"BorsNG.Command.parse_activation_args/1","type":"function"},{"doc":"The username part of an activation-by command is defined like this: It may start with whitespace @-signs are stripped &quot;, &quot; is converted to &quot;,&quot; Otherwise, whitespace ends it. iex&gt; alias BorsNG.Command iex&gt; Command.parse_activation_args(&quot;&quot;, &quot; this, is, whitespace heavy&quot;) &quot;this,is,whitespace&quot; iex&gt; Command.parse_activation_args(&quot;&quot;, &quot; @this, @has, @ats&quot;) &quot;this,has,ats&quot; iex&gt; Command.parse_activation_args(&quot;&quot;, &quot; trimmed &quot;) &quot;trimmed&quot; iex&gt; Command.parse_activation_args(&quot;&quot;, &quot;what\\never&quot;) &quot;what&quot; iex&gt; Command.parse_activation_args(&quot;&quot;, &quot;&quot;) &quot;&quot; iex&gt; Command.parse_activation_args(&quot;somebody&quot;) [{:activate_by, &quot;somebody&quot;}] iex&gt; Command.parse_activation_args(&quot;&quot;) [] iex&gt; Command.parse_activation_args(&quot; &quot;) [] iex&gt; Command.parse_activation_args(&quot;somebody p=10&quot;) [{:set_priority, 10}, {:activate_by, &quot;somebody&quot;}]","ref":"BorsNG.Command.html#parse_activation_args/2","title":"BorsNG.Command.parse_activation_args/2","type":"function"},{"doc":"","ref":"BorsNG.Command.html#parse_cmd/1","title":"BorsNG.Command.parse_cmd/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#parse_delegation_args/1","title":"BorsNG.Command.parse_delegation_args/1","type":"function"},{"doc":"The username part of a delegate-to command is defined like this: It may start with whitespace @-signs are stripped &quot;, &quot; is converted to &quot;,&quot; Otherwise, whitespace ends it. It's split on comma. iex&gt; alias BorsNG.Command iex&gt; Command.parse_delegation_args(&quot; this, is, whitespace heavy&quot;) [ {:delegate_to, &quot;this&quot;}, {:delegate_to, &quot;is&quot;}, {:delegate_to, &quot;whitespace&quot;}] iex&gt; Command.parse_delegation_args(&quot; @this, @has, @ats&quot;) [{:delegate_to, &quot;this&quot;}, {:delegate_to, &quot;has&quot;}, {:delegate_to, &quot;ats&quot;}] iex&gt; Command.parse_delegation_args(&quot; trimmed &quot;) [{:delegate_to, &quot;trimmed&quot;}] iex&gt; Command.parse_delegation_args(&quot;what\\never&quot;) [{:delegate_to, &quot;what&quot;}] iex&gt; Command.parse_delegation_args(&quot;somebody&quot;) [{:delegate_to, &quot;somebody&quot;}] iex&gt; Command.parse_delegation_args(&quot;&quot;) [] iex&gt; Command.parse_delegation_args(&quot; &quot;) []","ref":"BorsNG.Command.html#parse_delegation_args/3","title":"BorsNG.Command.parse_delegation_args/3","type":"function"},{"doc":"","ref":"BorsNG.Command.html#parse_priority/1","title":"BorsNG.Command.parse_priority/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#parse_single_patch/1","title":"BorsNG.Command.parse_single_patch/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#permission_denied/1","title":"BorsNG.Command.permission_denied/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#regex/0","title":"BorsNG.Command.regex/0","type":"function"},{"doc":"","ref":"BorsNG.Command.html#required_permission_level/1","title":"BorsNG.Command.required_permission_level/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#required_permission_level_cmd/1","title":"BorsNG.Command.required_permission_level_cmd/1","type":"function"},{"doc":"Given a populated struct, run everything.","ref":"BorsNG.Command.html#run/1","title":"BorsNG.Command.run/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#run/2","title":"BorsNG.Command.run/2","type":"function"},{"doc":"","ref":"BorsNG.Command.html#trim_and_parse_cmd/1","title":"BorsNG.Command.trim_and_parse_cmd/1","type":"function"},{"doc":"","ref":"BorsNG.Command.html#t:cmd/0","title":"BorsNG.Command.cmd/0","type":"type"},{"doc":"","ref":"BorsNG.Command.html#t:t/0","title":"BorsNG.Command.t/0","type":"type"},{"doc":"The database-level representation of a &quot;attempt&quot;. When a patch is tried, it gets merged with master individually and it's CI result is reported, but it is not pushed to master.","ref":"BorsNG.Database.Attempt.html","title":"BorsNG.Database.Attempt","type":"module"},{"doc":"","ref":"BorsNG.Database.Attempt.html#all/1","title":"BorsNG.Database.Attempt.all/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#all_for_patch/1","title":"BorsNG.Database.Attempt.all_for_patch/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#all_for_patch/2","title":"BorsNG.Database.Attempt.all_for_patch/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#all_for_project/2","title":"BorsNG.Database.Attempt.all_for_project/2","type":"function"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.Attempt.html#changeset/2","title":"BorsNG.Database.Attempt.changeset/2","type":"function"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.Attempt.html#changeset_state/2","title":"BorsNG.Database.Attempt.changeset_state/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#get_by_commit/3","title":"BorsNG.Database.Attempt.get_by_commit/3","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#get_next_poll_unix_sec/2","title":"BorsNG.Database.Attempt.get_next_poll_unix_sec/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#new/2","title":"BorsNG.Database.Attempt.new/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#next_poll_is_past/2","title":"BorsNG.Database.Attempt.next_poll_is_past/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#next_poll_is_past/3","title":"BorsNG.Database.Attempt.next_poll_is_past/3","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#timeout_is_past/1","title":"BorsNG.Database.Attempt.timeout_is_past/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Attempt.html#t:id/0","title":"BorsNG.Database.Attempt.id/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Attempt.html#t:t/0","title":"BorsNG.Database.Attempt.t/0","type":"type"},{"doc":"A type to represent the attmept state.","ref":"BorsNG.Database.AttemptState.html","title":"BorsNG.Database.AttemptState","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"BorsNG.Database.AttemptState.html#cast/1","title":"BorsNG.Database.AttemptState.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"BorsNG.Database.AttemptState.html#dump/1","title":"BorsNG.Database.AttemptState.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"BorsNG.Database.AttemptState.html#embed_as/1","title":"BorsNG.Database.AttemptState.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"BorsNG.Database.AttemptState.html#equal?/2","title":"BorsNG.Database.AttemptState.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"BorsNG.Database.AttemptState.html#load/1","title":"BorsNG.Database.AttemptState.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"BorsNG.Database.AttemptState.html#type/0","title":"BorsNG.Database.AttemptState.type/0","type":"function"},{"doc":"","ref":"BorsNG.Database.AttemptState.html#t:t/0","title":"BorsNG.Database.AttemptState.t/0","type":"type"},{"doc":"A database record for an individual CI run. It corresponds to an item in the status = [] array of bors.toml. This version links to an attempt, rather than a batch.","ref":"BorsNG.Database.AttemptStatus.html","title":"BorsNG.Database.AttemptStatus","type":"module"},{"doc":"","ref":"BorsNG.Database.AttemptStatus.html#all_for_attempt/1","title":"BorsNG.Database.AttemptStatus.all_for_attempt/1","type":"function"},{"doc":"","ref":"BorsNG.Database.AttemptStatus.html#all_for_attempt/2","title":"BorsNG.Database.AttemptStatus.all_for_attempt/2","type":"function"},{"doc":"","ref":"BorsNG.Database.AttemptStatus.html#changeset/2","title":"BorsNG.Database.AttemptStatus.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.AttemptStatus.html#get_for_attempt/2","title":"BorsNG.Database.AttemptStatus.get_for_attempt/2","type":"function"},{"doc":"","ref":"BorsNG.Database.AttemptStatus.html#t:t/0","title":"BorsNG.Database.AttemptStatus.t/0","type":"type"},{"doc":"A type to represent the status state.","ref":"BorsNG.Database.AttemptStatusState.html","title":"BorsNG.Database.AttemptStatusState","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"BorsNG.Database.AttemptStatusState.html#cast/1","title":"BorsNG.Database.AttemptStatusState.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"BorsNG.Database.AttemptStatusState.html#dump/1","title":"BorsNG.Database.AttemptStatusState.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"BorsNG.Database.AttemptStatusState.html#embed_as/1","title":"BorsNG.Database.AttemptStatusState.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"BorsNG.Database.AttemptStatusState.html#equal?/2","title":"BorsNG.Database.AttemptStatusState.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"BorsNG.Database.AttemptStatusState.html#load/1","title":"BorsNG.Database.AttemptStatusState.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"BorsNG.Database.AttemptStatusState.html#type/0","title":"BorsNG.Database.AttemptStatusState.type/0","type":"function"},{"doc":"","ref":"BorsNG.Database.AttemptStatusState.html#t:t/0","title":"BorsNG.Database.AttemptStatusState.t/0","type":"type"},{"doc":"The database-level representation of a &quot;batch&quot;. A batch is a collection of patches that are running, or will run.","ref":"BorsNG.Database.Batch.html","title":"BorsNG.Database.Batch","type":"module"},{"doc":"","ref":"BorsNG.Database.Batch.html#all_assoc/0","title":"BorsNG.Database.Batch.all_assoc/0","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#all_assoc/1","title":"BorsNG.Database.Batch.all_assoc/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#all_for_patch/2","title":"BorsNG.Database.Batch.all_for_patch/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#all_for_project/1","title":"BorsNG.Database.Batch.all_for_project/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#all_for_project/2","title":"BorsNG.Database.Batch.all_for_project/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#changeset/2","title":"BorsNG.Database.Batch.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#changeset_raise_priority/2","title":"BorsNG.Database.Batch.changeset_raise_priority/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#get_assoc_by_commit/3","title":"BorsNG.Database.Batch.get_assoc_by_commit/3","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#get_next_poll_unix_sec/1","title":"BorsNG.Database.Batch.get_next_poll_unix_sec/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#is_empty/2","title":"BorsNG.Database.Batch.is_empty/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#new/3","title":"BorsNG.Database.Batch.new/3","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#next_poll_is_past/1","title":"BorsNG.Database.Batch.next_poll_is_past/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#next_poll_is_past/2","title":"BorsNG.Database.Batch.next_poll_is_past/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#seek_for_project/2","title":"BorsNG.Database.Batch.seek_for_project/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#seek_for_project/4","title":"BorsNG.Database.Batch.seek_for_project/4","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#timeout_is_past/1","title":"BorsNG.Database.Batch.timeout_is_past/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Batch.html#t:id/0","title":"BorsNG.Database.Batch.id/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Batch.html#t:state/0","title":"BorsNG.Database.Batch.state/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Batch.html#t:t/0","title":"BorsNG.Database.Batch.t/0","type":"type"},{"doc":"A type to represent the batch state.","ref":"BorsNG.Database.BatchState.html","title":"BorsNG.Database.BatchState","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"BorsNG.Database.BatchState.html#cast/1","title":"BorsNG.Database.BatchState.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"BorsNG.Database.BatchState.html#dump/1","title":"BorsNG.Database.BatchState.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"BorsNG.Database.BatchState.html#embed_as/1","title":"BorsNG.Database.BatchState.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"BorsNG.Database.BatchState.html#equal?/2","title":"BorsNG.Database.BatchState.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"BorsNG.Database.BatchState.html#load/1","title":"BorsNG.Database.BatchState.load/1","type":"function"},{"doc":"","ref":"BorsNG.Database.BatchState.html#numberize/1","title":"BorsNG.Database.BatchState.numberize/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"BorsNG.Database.BatchState.html#type/0","title":"BorsNG.Database.BatchState.type/0","type":"function"},{"doc":"A module that keeps using definitions for models. This can be used as: use BorsNG.Database.Model","ref":"BorsNG.Database.Context.html","title":"BorsNG.Database.Context","type":"module"},{"doc":"When used, add common imports for models.","ref":"BorsNG.Database.Context.html#__using__/1","title":"BorsNG.Database.Context.__using__/1","type":"macro"},{"doc":"Fetch lists by user (for the users' dashboards).","ref":"BorsNG.Database.Context.Dashboard.html","title":"BorsNG.Database.Context.Dashboard","type":"module"},{"doc":"","ref":"BorsNG.Database.Context.Dashboard.html#my_patches/2","title":"BorsNG.Database.Context.Dashboard.my_patches/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Context.Dashboard.html#my_projects/2","title":"BorsNG.Database.Context.Dashboard.my_projects/2","type":"function"},{"doc":"Keeps user-accessible records of what happens to their repository.","ref":"BorsNG.Database.Context.Logging.html","title":"BorsNG.Database.Context.Logging","type":"module"},{"doc":"","ref":"BorsNG.Database.Context.Logging.html#log_cmd/3","title":"BorsNG.Database.Context.Logging.log_cmd/3","type":"function"},{"doc":"","ref":"BorsNG.Database.Context.Logging.html#most_recent_cmd/1","title":"BorsNG.Database.Context.Logging.most_recent_cmd/1","type":"function"},{"doc":"The connection between a project and its reviewers. People with this link can bring up the dashboard page and settings for a project, and can r+ a commit. Otherwise, they can't.","ref":"BorsNG.Database.Context.Permission.html","title":"BorsNG.Database.Context.Permission","type":"module"},{"doc":"","ref":"BorsNG.Database.Context.Permission.html#delegate/2","title":"BorsNG.Database.Context.Permission.delegate/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Context.Permission.html#get_permission/2","title":"BorsNG.Database.Context.Permission.get_permission/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Context.Permission.html#list_users_for_project/2","title":"BorsNG.Database.Context.Permission.list_users_for_project/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Context.Permission.html#permission?/3","title":"BorsNG.Database.Context.Permission.permission?/3","type":"function"},{"doc":"A Crash Dump from a Bors Agent. Allows an admin to see that a crash happened for a certain build thus allowing it to be reacted upon.","ref":"BorsNG.Database.Crash.html","title":"BorsNG.Database.Crash","type":"module"},{"doc":"","ref":"BorsNG.Database.Crash.html#all_for_project/1","title":"BorsNG.Database.Crash.all_for_project/1","type":"function"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.Crash.html#changeset/2","title":"BorsNG.Database.Crash.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Crash.html#days/1","title":"BorsNG.Database.Crash.days/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Crash.html#seek_for_project/2","title":"BorsNG.Database.Crash.seek_for_project/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Crash.html#seek_for_project/4","title":"BorsNG.Database.Crash.seek_for_project/4","type":"function"},{"doc":"","ref":"BorsNG.Database.Crash.html#t:t/0","title":"BorsNG.Database.Crash.t/0","type":"type"},{"doc":"A GitHub installation. See: https://developer.github.com/early-access/integrations/","ref":"BorsNG.Database.Installation.html","title":"BorsNG.Database.Installation","type":"module"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.Installation.html#changeset/2","title":"BorsNG.Database.Installation.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Installation.html#t:xref/0","title":"BorsNG.Database.Installation.xref/0","type":"type"},{"doc":"The connection between a project and its reviewers. People with this link can bring up the dashboard page and settings for a project, and can r+ a commit. Otherwise, they can't.","ref":"BorsNG.Database.LinkMemberProject.html","title":"BorsNG.Database.LinkMemberProject","type":"module"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.LinkMemberProject.html#changeset/2","title":"BorsNG.Database.LinkMemberProject.changeset/2","type":"function"},{"doc":"Linker table between the patches that are being run by a batch, and the batch itself. There should not be more than one running batch with the same patch, though once a batch fails out, other batches can take the same patch.","ref":"BorsNG.Database.LinkPatchBatch.html","title":"BorsNG.Database.LinkPatchBatch","type":"module"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.LinkPatchBatch.html#changeset/2","title":"BorsNG.Database.LinkPatchBatch.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.LinkPatchBatch.html#from_batch/1","title":"BorsNG.Database.LinkPatchBatch.from_batch/1","type":"function"},{"doc":"The connection between a project and its reviewers. People with this link can bring up the dashboard page and settings for a project, and can r+ a commit. Otherwise, they can't.","ref":"BorsNG.Database.LinkUserProject.html","title":"BorsNG.Database.LinkUserProject","type":"module"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.LinkUserProject.html#changeset/2","title":"BorsNG.Database.LinkUserProject.changeset/2","type":"function"},{"doc":"Detailed command log of every patch.","ref":"BorsNG.Database.Log.html","title":"BorsNG.Database.Log","type":"module"},{"doc":"","ref":"BorsNG.Database.Log.html#t:t/0","title":"BorsNG.Database.Log.t/0","type":"type"},{"doc":"An already-parsed bors command. Represented as a binary Erlang term.","ref":"BorsNG.Database.Log.Cmd.html","title":"BorsNG.Database.Log.Cmd","type":"module"},{"doc":"","ref":"BorsNG.Database.Log.Cmd.html#cast/1","title":"BorsNG.Database.Log.Cmd.cast/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Log.Cmd.html#dump/1","title":"BorsNG.Database.Log.Cmd.dump/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Log.Cmd.html#load/1","title":"BorsNG.Database.Log.Cmd.load/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Log.Cmd.html#type/0","title":"BorsNG.Database.Log.Cmd.type/0","type":"function"},{"doc":"Custom Ecto database migration task to be used in compiled releases. Since Mix tasks are not available after compiling, implement our own version of mix ecto.create and mix ecto.migrate . BorsNG.Database.Migrate.run_standalone should be called from external scripts to perform the required work and exit afterwards. BorsNG.Database.Migrate.up should be called to run the migrations but continue running normally afterwards.","ref":"BorsNG.Database.Migrate.html","title":"BorsNG.Database.Migrate","type":"module"},{"doc":"","ref":"BorsNG.Database.Migrate.html#create_storage_for/1","title":"BorsNG.Database.Migrate.create_storage_for/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#migrations_path/1","title":"BorsNG.Database.Migrate.migrations_path/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#priv_dir/1","title":"BorsNG.Database.Migrate.priv_dir/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#priv_path_for/2","title":"BorsNG.Database.Migrate.priv_path_for/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#repos/0","title":"BorsNG.Database.Migrate.repos/0","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#run_migrations_for/1","title":"BorsNG.Database.Migrate.run_migrations_for/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#run_seeds_for/1","title":"BorsNG.Database.Migrate.run_seeds_for/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#run_standalone/0","title":"BorsNG.Database.Migrate.run_standalone/0","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#seeds_path/1","title":"BorsNG.Database.Migrate.seeds_path/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Migrate.html#up/0","title":"BorsNG.Database.Migrate.up/0","type":"function"},{"doc":"A module that keeps using definitions for models. This can be used as: use BorsNG.Database.Model","ref":"BorsNG.Database.Model.html","title":"BorsNG.Database.Model","type":"module"},{"doc":"When used, add common imports for models.","ref":"BorsNG.Database.Model.html#__using__/1","title":"BorsNG.Database.Model.__using__/1","type":"macro"},{"doc":"Corresponds to a pull request in GitHub. A closed patch may not be r+'ed, nor can a patch associated with a completed batch be r+'ed again, though a patch may be merged and r+'ed at the same time.","ref":"BorsNG.Database.Patch.html","title":"BorsNG.Database.Patch","type":"module"},{"doc":"","ref":"BorsNG.Database.Patch.html#all/1","title":"BorsNG.Database.Patch.all/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Patch.html#all_for_batch/1","title":"BorsNG.Database.Patch.all_for_batch/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Patch.html#all_for_project/2","title":"BorsNG.Database.Patch.all_for_project/2","type":"function"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.Patch.html#changeset/2","title":"BorsNG.Database.Patch.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Patch.html#ci_skip?/1","title":"BorsNG.Database.Patch.ci_skip?/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Patch.html#dups_in_batches/0","title":"BorsNG.Database.Patch.dups_in_batches/0","type":"function"},{"doc":"","ref":"BorsNG.Database.Patch.html#t:id/0","title":"BorsNG.Database.Patch.id/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Patch.html#t:t/0","title":"BorsNG.Database.Patch.t/0","type":"type"},{"doc":"Corresponds to a repo in GitHub, as opposed to a repo in Ecto. This also corresponds to a queue of batches.","ref":"BorsNG.Database.Project.html","title":"BorsNG.Database.Project","type":"module"},{"doc":"","ref":"BorsNG.Database.Project.html#active/0","title":"BorsNG.Database.Project.active/0","type":"function"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.Project.html#changeset/2","title":"BorsNG.Database.Project.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#changeset_branches/2","title":"BorsNG.Database.Project.changeset_branches/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#changeset_member_settings/2","title":"BorsNG.Database.Project.changeset_member_settings/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#changeset_reviewer_settings/2","title":"BorsNG.Database.Project.changeset_reviewer_settings/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#installation_connection/2","title":"BorsNG.Database.Project.installation_connection/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#installation_project_connection/2","title":"BorsNG.Database.Project.installation_project_connection/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#orphans/0","title":"BorsNG.Database.Project.orphans/0","type":"function"},{"doc":"After modifying the underlying model, call this to notify the UI.","ref":"BorsNG.Database.Project.html#ping!/1","title":"BorsNG.Database.Project.ping!/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Project.html#t:id/0","title":"BorsNG.Database.Project.id/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Project.html#t:t/0","title":"BorsNG.Database.Project.t/0","type":"type"},{"doc":"A type to represent the permissions of a project member.","ref":"BorsNG.Database.ProjectPermission.html","title":"BorsNG.Database.ProjectPermission","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"BorsNG.Database.ProjectPermission.html#cast/1","title":"BorsNG.Database.ProjectPermission.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"BorsNG.Database.ProjectPermission.html#dump/1","title":"BorsNG.Database.ProjectPermission.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"BorsNG.Database.ProjectPermission.html#embed_as/1","title":"BorsNG.Database.ProjectPermission.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"BorsNG.Database.ProjectPermission.html#equal?/2","title":"BorsNG.Database.ProjectPermission.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"BorsNG.Database.ProjectPermission.html#load/1","title":"BorsNG.Database.ProjectPermission.load/1","type":"function"},{"doc":"","ref":"BorsNG.Database.ProjectPermission.html#select_list/0","title":"BorsNG.Database.ProjectPermission.select_list/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"BorsNG.Database.ProjectPermission.html#type/0","title":"BorsNG.Database.ProjectPermission.type/0","type":"function"},{"doc":"An ecto data repository; this process interacts with your persistent database. Do not confuse this with a GitHub repo. We call those Project s internally.","ref":"BorsNG.Database.Repo.html","title":"BorsNG.Database.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"BorsNG.Database.Repo.html#aggregate/3","title":"BorsNG.Database.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"BorsNG.Database.Repo.html#aggregate/4","title":"BorsNG.Database.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"BorsNG.Database.Repo.html#all/2","title":"BorsNG.Database.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"BorsNG.Database.Repo.html#checked_out?/0","title":"BorsNG.Database.Repo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"BorsNG.Database.Repo.html#checkout/2","title":"BorsNG.Database.Repo.checkout/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Repo.html#child_spec/1","title":"BorsNG.Database.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"BorsNG.Database.Repo.html#config/0","title":"BorsNG.Database.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"BorsNG.Database.Repo.html#default_options/1","title":"BorsNG.Database.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"BorsNG.Database.Repo.html#delete/2","title":"BorsNG.Database.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"BorsNG.Database.Repo.html#delete!/2","title":"BorsNG.Database.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"BorsNG.Database.Repo.html#delete_all/2","title":"BorsNG.Database.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"BorsNG.Database.Repo.html#exists?/2","title":"BorsNG.Database.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"BorsNG.Database.Repo.html#explain/3","title":"BorsNG.Database.Repo.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"BorsNG.Database.Repo.html#get/3","title":"BorsNG.Database.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"BorsNG.Database.Repo.html#get!/3","title":"BorsNG.Database.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"BorsNG.Database.Repo.html#get_by/3","title":"BorsNG.Database.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"BorsNG.Database.Repo.html#get_by!/3","title":"BorsNG.Database.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"BorsNG.Database.Repo.html#get_dynamic_repo/0","title":"BorsNG.Database.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"BorsNG.Database.Repo.html#in_transaction?/0","title":"BorsNG.Database.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.init/2 .","ref":"BorsNG.Database.Repo.html#init/2","title":"BorsNG.Database.Repo.init/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"BorsNG.Database.Repo.html#insert/2","title":"BorsNG.Database.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"BorsNG.Database.Repo.html#insert!/2","title":"BorsNG.Database.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"BorsNG.Database.Repo.html#insert_all/3","title":"BorsNG.Database.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"BorsNG.Database.Repo.html#insert_or_update/2","title":"BorsNG.Database.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"BorsNG.Database.Repo.html#insert_or_update!/2","title":"BorsNG.Database.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"BorsNG.Database.Repo.html#load/2","title":"BorsNG.Database.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"BorsNG.Database.Repo.html#one/2","title":"BorsNG.Database.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"BorsNG.Database.Repo.html#one!/2","title":"BorsNG.Database.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"BorsNG.Database.Repo.html#preload/3","title":"BorsNG.Database.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"BorsNG.Database.Repo.html#prepare_query/3","title":"BorsNG.Database.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"BorsNG.Database.Repo.html#put_dynamic_repo/1","title":"BorsNG.Database.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"BorsNG.Database.Repo.html#query/3","title":"BorsNG.Database.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"BorsNG.Database.Repo.html#query!/3","title":"BorsNG.Database.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"BorsNG.Database.Repo.html#reload/2","title":"BorsNG.Database.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"BorsNG.Database.Repo.html#reload!/2","title":"BorsNG.Database.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"BorsNG.Database.Repo.html#rollback/1","title":"BorsNG.Database.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"BorsNG.Database.Repo.html#start_link/1","title":"BorsNG.Database.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"BorsNG.Database.Repo.html#stop/1","title":"BorsNG.Database.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"BorsNG.Database.Repo.html#stream/2","title":"BorsNG.Database.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"BorsNG.Database.Repo.html#to_sql/2","title":"BorsNG.Database.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"BorsNG.Database.Repo.html#transaction/2","title":"BorsNG.Database.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"BorsNG.Database.Repo.html#update/2","title":"BorsNG.Database.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"BorsNG.Database.Repo.html#update!/2","title":"BorsNG.Database.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"BorsNG.Database.Repo.html#update_all/3","title":"BorsNG.Database.Repo.update_all/3","type":"function"},{"doc":"A database record for an individual CI run. It corresponds to an item in the status = [] array of bors.toml.","ref":"BorsNG.Database.Status.html","title":"BorsNG.Database.Status","type":"module"},{"doc":"","ref":"BorsNG.Database.Status.html#all_for_batch/1","title":"BorsNG.Database.Status.all_for_batch/1","type":"function"},{"doc":"","ref":"BorsNG.Database.Status.html#all_for_batch/2","title":"BorsNG.Database.Status.all_for_batch/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Status.html#changeset/2","title":"BorsNG.Database.Status.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Status.html#get_for_batch/2","title":"BorsNG.Database.Status.get_for_batch/2","type":"function"},{"doc":"","ref":"BorsNG.Database.Status.html#t:state/0","title":"BorsNG.Database.Status.state/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Status.html#t:state_n/0","title":"BorsNG.Database.Status.state_n/0","type":"type"},{"doc":"","ref":"BorsNG.Database.Status.html#t:t/0","title":"BorsNG.Database.Status.t/0","type":"type"},{"doc":"A type to represent the status state.","ref":"BorsNG.Database.StatusState.html","title":"BorsNG.Database.StatusState","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"BorsNG.Database.StatusState.html#cast/1","title":"BorsNG.Database.StatusState.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"BorsNG.Database.StatusState.html#dump/1","title":"BorsNG.Database.StatusState.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"BorsNG.Database.StatusState.html#embed_as/1","title":"BorsNG.Database.StatusState.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"BorsNG.Database.StatusState.html#equal?/2","title":"BorsNG.Database.StatusState.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"BorsNG.Database.StatusState.html#load/1","title":"BorsNG.Database.StatusState.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"BorsNG.Database.StatusState.html#type/0","title":"BorsNG.Database.StatusState.type/0","type":"function"},{"doc":"A user account; each user account in our system has a corresponding GitHub account.","ref":"BorsNG.Database.User.html","title":"BorsNG.Database.User","type":"module"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.User.html#changeset/2","title":"BorsNG.Database.User.changeset/2","type":"function"},{"doc":"","ref":"BorsNG.Database.User.html#t:t/0","title":"BorsNG.Database.User.t/0","type":"type"},{"doc":"The connection between a patch and users that have been delegated the permission to approve it.","ref":"BorsNG.Database.UserPatchDelegation.html","title":"BorsNG.Database.UserPatchDelegation","type":"module"},{"doc":"Builds a changeset based on the struct and params .","ref":"BorsNG.Database.UserPatchDelegation.html#changeset/2","title":"BorsNG.Database.UserPatchDelegation.changeset/2","type":"function"},{"doc":"The set of plugs that are always present, including the websocket interceptor and the JSON parser. This is what Cowboy calls into.","ref":"BorsNG.Endpoint.html","title":"BorsNG.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"BorsNG.Endpoint.html#broadcast/3","title":"BorsNG.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"BorsNG.Endpoint.html#broadcast!/3","title":"BorsNG.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"BorsNG.Endpoint.html#broadcast_from/4","title":"BorsNG.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"BorsNG.Endpoint.html#broadcast_from!/4","title":"BorsNG.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"BorsNG.Endpoint.html#call/2","title":"BorsNG.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"BorsNG.Endpoint.html#child_spec/1","title":"BorsNG.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"BorsNG.Endpoint.html#config/2","title":"BorsNG.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"BorsNG.Endpoint.html#config_change/2","title":"BorsNG.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"BorsNG.Endpoint.html#host/0","title":"BorsNG.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"BorsNG.Endpoint.html#init/1","title":"BorsNG.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"BorsNG.Endpoint.html#local_broadcast/3","title":"BorsNG.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"BorsNG.Endpoint.html#local_broadcast_from/4","title":"BorsNG.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"BorsNG.Endpoint.html#path/1","title":"BorsNG.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"BorsNG.Endpoint.html#script_name/0","title":"BorsNG.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"BorsNG.Endpoint.html#start_link/1","title":"BorsNG.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"BorsNG.Endpoint.html#static_integrity/1","title":"BorsNG.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"BorsNG.Endpoint.html#static_lookup/1","title":"BorsNG.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"BorsNG.Endpoint.html#static_path/1","title":"BorsNG.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"BorsNG.Endpoint.html#static_url/0","title":"BorsNG.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"BorsNG.Endpoint.html#struct_url/0","title":"BorsNG.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"BorsNG.Endpoint.html#subscribe/2","title":"BorsNG.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"BorsNG.Endpoint.html#unsubscribe/1","title":"BorsNG.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"BorsNG.Endpoint.html#url/0","title":"BorsNG.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"BorsNG.ErrorHelpers.html","title":"BorsNG.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"BorsNG.ErrorHelpers.html#error_tag/2","title":"BorsNG.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"BorsNG.ErrorHelpers.html#translate_error/1","title":"BorsNG.ErrorHelpers.translate_error/1","type":"function"},{"doc":"Simple error messages, when things crash or no route is found. This module was generated by Phoenix, and should probably be replaced with templates that actually look good.","ref":"BorsNG.ErrorView.html","title":"BorsNG.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.ErrorView.html#__resource__/0","title":"BorsNG.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.ErrorView.html#render/2","title":"BorsNG.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.ErrorView.html#template_not_found/2","title":"BorsNG.ErrorView.template_not_found/2","type":"function"},{"doc":"","ref":"BorsNG.FilePattern.html","title":"BorsNG.FilePattern","type":"module"},{"doc":"","ref":"BorsNG.FilePattern.html#t:t/0","title":"BorsNG.FilePattern.t/0","type":"type"},{"doc":"","ref":"BorsNG.FilePattern.html#t:tjson/0","title":"BorsNG.FilePattern.tjson/0","type":"type"},{"doc":"A module providing Internationalization with a gettext-based API. By using Gettext , your module gains a set of macros for translations, for example: import BorsNG.Gettext # Simple translation gettext &quot;Here is the string to translate&quot; # Plural translation ngettext &quot;Here is the string to translate&quot; , &quot;Here are the strings to translate&quot; , 3 # Domain-based translation dgettext &quot;errors&quot; , &quot;Here is the error message to translate&quot; See the Gettext Docs for detailed usage.","ref":"BorsNG.Gettext.html","title":"BorsNG.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3 .","ref":"BorsNG.Gettext.html#dgettext/3","title":"BorsNG.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2 .","ref":"BorsNG.Gettext.html#dgettext_noop/2","title":"BorsNG.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5 .","ref":"BorsNG.Gettext.html#dngettext/5","title":"BorsNG.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3 .","ref":"BorsNG.Gettext.html#dngettext_noop/3","title":"BorsNG.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4 .","ref":"BorsNG.Gettext.html#dpgettext/4","title":"BorsNG.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"BorsNG.Gettext.html#dpgettext_noop/3","title":"BorsNG.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6 .","ref":"BorsNG.Gettext.html#dpngettext/6","title":"BorsNG.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"BorsNG.Gettext.html#dpngettext_noop/4","title":"BorsNG.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2 .","ref":"BorsNG.Gettext.html#gettext/2","title":"BorsNG.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1 .","ref":"BorsNG.Gettext.html#gettext_comment/1","title":"BorsNG.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1 .","ref":"BorsNG.Gettext.html#gettext_noop/1","title":"BorsNG.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2 .","ref":"BorsNG.Gettext.html#handle_missing_bindings/2","title":"BorsNG.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6 .","ref":"BorsNG.Gettext.html#handle_missing_plural_translation/6","title":"BorsNG.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4 .","ref":"BorsNG.Gettext.html#handle_missing_translation/4","title":"BorsNG.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"BorsNG.Gettext.html#lgettext/5","title":"BorsNG.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"BorsNG.Gettext.html#lngettext/7","title":"BorsNG.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4 .","ref":"BorsNG.Gettext.html#ngettext/4","title":"BorsNG.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2 .","ref":"BorsNG.Gettext.html#ngettext_noop/2","title":"BorsNG.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3 .","ref":"BorsNG.Gettext.html#pgettext/3","title":"BorsNG.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"BorsNG.Gettext.html#pgettext_noop/2","title":"BorsNG.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5 .","ref":"BorsNG.Gettext.html#pngettext/5","title":"BorsNG.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"BorsNG.Gettext.html#pngettext_noop/3","title":"BorsNG.Gettext.pngettext_noop/3","type":"macro"},{"doc":"Wrappers around the GitHub REST API.","ref":"BorsNG.GitHub.html","title":"BorsNG.GitHub","type":"module"},{"doc":"","ref":"BorsNG.GitHub.html#belongs_to_team?/4","title":"BorsNG.GitHub.belongs_to_team?/4","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#create_commit/2","title":"BorsNG.GitHub.create_commit/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#create_commit!/2","title":"BorsNG.GitHub.create_commit!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#delete_branch!/2","title":"BorsNG.GitHub.delete_branch!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#force_push!/3","title":"BorsNG.GitHub.force_push!/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_app!/0","title":"BorsNG.GitHub.get_app!/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_branch!/2","title":"BorsNG.GitHub.get_branch!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_collaborators_by_repo/1","title":"BorsNG.GitHub.get_collaborators_by_repo/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_commit_reviews!/3","title":"BorsNG.GitHub.get_commit_reviews!/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_commit_status!/2","title":"BorsNG.GitHub.get_commit_status!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_file!/3","title":"BorsNG.GitHub.get_file!/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_installation_list!/0","title":"BorsNG.GitHub.get_installation_list!/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_installation_repos!/1","title":"BorsNG.GitHub.get_installation_repos!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_labels!/2","title":"BorsNG.GitHub.get_labels!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_open_prs!/1","title":"BorsNG.GitHub.get_open_prs!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_open_prs_with_base!/2","title":"BorsNG.GitHub.get_open_prs_with_base!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_pr/2","title":"BorsNG.GitHub.get_pr/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_pr!/2","title":"BorsNG.GitHub.get_pr!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_pr_commits/2","title":"BorsNG.GitHub.get_pr_commits/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_pr_commits!/2","title":"BorsNG.GitHub.get_pr_commits!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_pr_files/2","title":"BorsNG.GitHub.get_pr_files/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_pr_files!/2","title":"BorsNG.GitHub.get_pr_files!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_reviews!/2","title":"BorsNG.GitHub.get_reviews!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#get_user_by_login!/2","title":"BorsNG.GitHub.get_user_by_login!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#map_changed_status/1","title":"BorsNG.GitHub.map_changed_status/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#map_check_to_status/1","title":"BorsNG.GitHub.map_check_to_status/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#map_state_to_status/1","title":"BorsNG.GitHub.map_state_to_status/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#map_status_to_state/1","title":"BorsNG.GitHub.map_status_to_state/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#merge_branch!/2","title":"BorsNG.GitHub.merge_branch!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#post_comment!/3","title":"BorsNG.GitHub.post_comment!/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#post_commit_status!/2","title":"BorsNG.GitHub.post_commit_status!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#push/3","title":"BorsNG.GitHub.push/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#push!/3","title":"BorsNG.GitHub.push!/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#synthesize_commit!/2","title":"BorsNG.GitHub.synthesize_commit!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#update_pr/2","title":"BorsNG.GitHub.update_pr/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#update_pr!/2","title":"BorsNG.GitHub.update_pr!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#update_pr_base/2","title":"BorsNG.GitHub.update_pr_base/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#update_pr_base!/2","title":"BorsNG.GitHub.update_pr_base!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.html#t:tcollaborator/0","title":"BorsNG.GitHub.tcollaborator/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:tcommitter/0","title":"BorsNG.GitHub.tcommitter/0","type":"type"},{"doc":"A repository connection; it packages a repository with the permissions to access it.","ref":"BorsNG.GitHub.html#t:tconn/0","title":"BorsNG.GitHub.tconn/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:tpr/0","title":"BorsNG.GitHub.tpr/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:trepo/0","title":"BorsNG.GitHub.trepo/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:trepo_perm/0","title":"BorsNG.GitHub.trepo_perm/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:tstatus/0","title":"BorsNG.GitHub.tstatus/0","type":"type"},{"doc":"An authentication token; this may be a raw token (as on oAuth) or an installation xref (in which case the server will look it up).","ref":"BorsNG.GitHub.html#t:ttoken/0","title":"BorsNG.GitHub.ttoken/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:tuser/0","title":"BorsNG.GitHub.tuser/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.html#t:tuser_repo_perms/0","title":"BorsNG.GitHub.tuser_repo_perms/0","type":"type"},{"doc":"The structure of GitHub commit data.","ref":"BorsNG.GitHub.Commit.html","title":"BorsNG.GitHub.Commit","type":"module"},{"doc":"Convert from Poison-decoded JSON to a Commit struct.","ref":"BorsNG.GitHub.Commit.html#from_json/1","title":"BorsNG.GitHub.Commit.from_json/1","type":"function"},{"doc":"Convert from Poison-decoded JSON to a Commit struct.","ref":"BorsNG.GitHub.Commit.html#from_json!/1","title":"BorsNG.GitHub.Commit.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Commit.html#t:t/0","title":"BorsNG.GitHub.Commit.t/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Commit.html#t:tjson/0","title":"BorsNG.GitHub.Commit.tjson/0","type":"type"},{"doc":"The structure of GitHub pull request file","ref":"BorsNG.GitHub.File.html","title":"BorsNG.GitHub.File","type":"module"},{"doc":"Convert from JSON string to a File struct.","ref":"BorsNG.GitHub.File.html#from_json/1","title":"BorsNG.GitHub.File.from_json/1","type":"function"},{"doc":"Convert from JSON string to a File struct.","ref":"BorsNG.GitHub.File.html#from_json!/1","title":"BorsNG.GitHub.File.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.File.html#t:t/0","title":"BorsNG.GitHub.File.t/0","type":"type"},{"doc":"Helper functions for ServerMock for common operations without having to modify state by hand. Tries to lookup values instead of requiring full %{} associative arrays. Assumes a single GitHub instance with a single repository and single user. Does everything through webhook notifications. Does not use Database.Repo.insert directly! (One exception: adding a reviewer, which is normally done through Bors' web UI.) For example, I can run iex -S mix phx.server and do this: iex&gt; alias BorsNG.GitHub.FriendlyMock iex&gt; FriendlyMock . init_state iex&gt; FriendlyMock . make_admin iex&gt; pr_num = FriendlyMock . add_pr &quot;first&quot; iex&gt; FriendlyMock . add_reviewer iex&gt; FriendlyMock . ci_status ( &quot;SHA-1&quot; , &quot;ci&quot; , :running ) iex&gt; FriendlyMock . add_comment ( pr_num , &quot;bors ping&quot; ) iex&gt; FriendlyMock . add_comment ( pr_num , &quot;bors r+&quot; ) iex&gt; FriendlyMock . get_state % { { :installation , 91 } =&gt; %{ repos : [ % BorsNG.GitHub.Repo { id : 14 , name : &quot;test/repo&quot; , owner : %{ avatar_url : &quot;&quot; , id : 7 , login : &quot;tester&quot; , type : :user } , private : false } ] } , { { :installation , 91 } , 14 } =&gt; % { branches : %{ &quot;first&quot; =&gt; &quot;SHA-1&quot; , &quot;master&quot; =&gt; &quot;ini&quot; } , collaborators : %{ } , comments : %{ 1 =&gt; [ &quot;:-1: Rejected by PR status&quot; , &quot;bors r+&quot; , &quot;pong&quot; , &quot;bors ping&quot; ] } , commits : %{ } , files : % { &quot;SHA-1&quot; =&gt; % { &quot;.github/bors.toml&quot; =&gt; &quot;status = [ &quot; ci &quot; ] pr_status = [ &quot;ci&quot; ] prerun_timeout_sec = 5 delete_merged_branches = true &quot; } , &quot;master&quot; =&gt; % { &quot;.github/bors.toml&quot; =&gt; &quot;status = [ &quot; ci &quot; ] pr_status = [ &quot;ci&quot; ] prerun_timeout_sec = 5 delete_merged_branches = true &quot; } , &quot;staging.tmp&quot; =&gt; % { &quot;.github/bors.toml&quot; =&gt; &quot;status = [ &quot; ci &quot; ] pr_status = [ &quot;ci&quot; ] prerun_timeout_sec = 5 delete_merged_branches = true &quot; } } , pr_commits : %{ 1 =&gt; [ ] } , pulls : %{ 1 =&gt; % BorsNG.GitHub.Pr { base_ref : &quot;master&quot; , base_repo_id : 0 , body : nil , head_ref : &quot;first&quot; , head_repo_id : 0 , head_sha : &quot;SHA-1&quot; , merged : false , number : 1 , state : :open , title : &quot;first&quot; , user : %{ &quot;avatar_url&quot; =&gt; &quot;&quot; , &quot;id&quot; =&gt; 7 , &quot;login&quot; =&gt; &quot;tester&quot; } } } , statuses : %{ &quot;SHA-1&quot; =&gt; %{ &quot;ci&quot; =&gt; :running } } } } Now try iex&gt; FriendlyMock . ci_status ( &quot;SHA-1&quot; , &quot;ci&quot; , :ok ) instead of :running above.","ref":"BorsNG.GitHub.FriendlyMock.html","title":"BorsNG.GitHub.FriendlyMock","type":"module"},{"doc":"Adds a reviewer comment.","ref":"BorsNG.GitHub.FriendlyMock.html#add_comment/3","title":"BorsNG.GitHub.FriendlyMock.add_comment/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#add_commit/3","title":"BorsNG.GitHub.FriendlyMock.add_commit/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#add_pr/2","title":"BorsNG.GitHub.FriendlyMock.add_pr/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#add_reviewer/2","title":"BorsNG.GitHub.FriendlyMock.add_reviewer/2","type":"function"},{"doc":"Set CI status","ref":"BorsNG.GitHub.FriendlyMock.html#ci_status/3","title":"BorsNG.GitHub.FriendlyMock.ci_status/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#comments/2","title":"BorsNG.GitHub.FriendlyMock.comments/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#commits/3","title":"BorsNG.GitHub.FriendlyMock.commits/3","type":"function"},{"doc":"An example function. Call from iex with iex&gt; FriendlyMock.full_example Then modify, recompile() and run again.","ref":"BorsNG.GitHub.FriendlyMock.html#full_example/0","title":"BorsNG.GitHub.FriendlyMock.full_example/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#get_state/0","title":"BorsNG.GitHub.FriendlyMock.get_state/0","type":"function"},{"doc":"Creates a single installation with a single repo where nothing has happened yet.","ref":"BorsNG.GitHub.FriendlyMock.html#init_state/0","title":"BorsNG.GitHub.FriendlyMock.init_state/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#make_admin/1","title":"BorsNG.GitHub.FriendlyMock.make_admin/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#pr_to_json/1","title":"BorsNG.GitHub.FriendlyMock.pr_to_json/1","type":"function"},{"doc":"Get open PRs","ref":"BorsNG.GitHub.FriendlyMock.html#prs/2","title":"BorsNG.GitHub.FriendlyMock.prs/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FriendlyMock.html#update_mock/4","title":"BorsNG.GitHub.FriendlyMock.update_mock/4","type":"function"},{"doc":"The GitHub structure of a detailed user account. See https://developer.github.com/v3/users/#get-a-single-user","ref":"BorsNG.GitHub.FullUser.html","title":"BorsNG.GitHub.FullUser","type":"module"},{"doc":"Convert from Poison-decoded JSON to a User struct.","ref":"BorsNG.GitHub.FullUser.html#from_json/1","title":"BorsNG.GitHub.FullUser.from_json/1","type":"function"},{"doc":"Convert from Poison-decoded JSON to a User struct.","ref":"BorsNG.GitHub.FullUser.html#from_json!/1","title":"BorsNG.GitHub.FullUser.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.FullUser.html#t:t/0","title":"BorsNG.GitHub.FullUser.t/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.FullUser.html#t:tjson/0","title":"BorsNG.GitHub.FullUser.tjson/0","type":"type"},{"doc":"An OAuth2 strategy for GitHub.","ref":"BorsNG.GitHub.OAuth2.html","title":"BorsNG.GitHub.OAuth2","type":"module"},{"doc":"Callback implementation for OAuth2.Strategy.authorize_url/2 .","ref":"BorsNG.GitHub.OAuth2.html#authorize_url/2","title":"BorsNG.GitHub.OAuth2.authorize_url/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2.html#authorize_url!/0","title":"BorsNG.GitHub.OAuth2.authorize_url!/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2.html#client/0","title":"BorsNG.GitHub.OAuth2.client/0","type":"function"},{"doc":"Callback implementation for OAuth2.Strategy.get_token/3 .","ref":"BorsNG.GitHub.OAuth2.html#get_token/3","title":"BorsNG.GitHub.OAuth2.get_token/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2.html#get_token!/1","title":"BorsNG.GitHub.OAuth2.get_token!/1","type":"function"},{"doc":"Get info about the user we are now logged in as","ref":"BorsNG.GitHub.OAuth2.html#get_user!/1","title":"BorsNG.GitHub.OAuth2.get_user!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2.html#t:t/0","title":"BorsNG.GitHub.OAuth2.t/0","type":"type"},{"doc":"This is only used for development and testing.","ref":"BorsNG.GitHub.OAuth2Mock.html","title":"BorsNG.GitHub.OAuth2Mock","type":"module"},{"doc":"","ref":"BorsNG.GitHub.OAuth2Mock.html#authorize_url!/0","title":"BorsNG.GitHub.OAuth2Mock.authorize_url!/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2Mock.html#get_token!/1","title":"BorsNG.GitHub.OAuth2Mock.get_token!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2Mock.html#get_user!/1","title":"BorsNG.GitHub.OAuth2Mock.get_user!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.OAuth2Mock.html#t:t/0","title":"BorsNG.GitHub.OAuth2Mock.t/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.OAuth2Mock.html#t:tuser/0","title":"BorsNG.GitHub.OAuth2Mock.tuser/0","type":"type"},{"doc":"The structure of GitHub pull requests","ref":"BorsNG.GitHub.Pr.html","title":"BorsNG.GitHub.Pr","type":"module"},{"doc":"Convert from Poison-decoded JSON to a Pr struct.","ref":"BorsNG.GitHub.Pr.html#from_json/1","title":"BorsNG.GitHub.Pr.from_json/1","type":"function"},{"doc":"Convert from Poison-decoded JSON to a Pr struct.","ref":"BorsNG.GitHub.Pr.html#from_json!/1","title":"BorsNG.GitHub.Pr.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Pr.html#t:t/0","title":"BorsNG.GitHub.Pr.t/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Pr.html#t:tjson/0","title":"BorsNG.GitHub.Pr.tjson/0","type":"type"},{"doc":"The GitHub repository structure.","ref":"BorsNG.GitHub.Repo.html","title":"BorsNG.GitHub.Repo","type":"module"},{"doc":"Convert from Poison-decoded JSON to a Repository struct.","ref":"BorsNG.GitHub.Repo.html#from_json/1","title":"BorsNG.GitHub.Repo.from_json/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Repo.html#from_json!/1","title":"BorsNG.GitHub.Repo.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Repo.html#t:t/0","title":"BorsNG.GitHub.Repo.t/0","type":"type"},{"doc":"The GitHub repository structure.","ref":"BorsNG.GitHub.Reviews.html","title":"BorsNG.GitHub.Reviews","type":"module"},{"doc":"","ref":"BorsNG.GitHub.Reviews.html#filter_sha!/2","title":"BorsNG.GitHub.Reviews.filter_sha!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Reviews.html#from_json!/1","title":"BorsNG.GitHub.Reviews.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Reviews.html#t:state/0","title":"BorsNG.GitHub.Reviews.state/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Reviews.html#t:t/0","title":"BorsNG.GitHub.Reviews.t/0","type":"type"},{"doc":"Provides a real connection to GitHub's REST API. This doesn't currently do rate limiting, but it will.","ref":"BorsNG.GitHub.Server.html","title":"BorsNG.GitHub.Server","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.GitHub.Server.html#child_spec/1","title":"BorsNG.GitHub.Server.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Server.html#do_handle_call/3","title":"BorsNG.GitHub.Server.do_handle_call/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Server.html#get_collaborators_by_repo_/3","title":"BorsNG.GitHub.Server.get_collaborators_by_repo_/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Server.html#get_installation_token!/1","title":"BorsNG.GitHub.Server.get_installation_token!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Server.html#get_jwt_token/0","title":"BorsNG.GitHub.Server.get_jwt_token/0","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.GitHub.Server.html#init/1","title":"BorsNG.GitHub.Server.init/1","type":"function"},{"doc":"Given an {:installation, installation_xref}, look it up in the token cache. If it's there, and it's still usable, use it. Otherwise, fetch a new one.","ref":"BorsNG.GitHub.Server.html#raw_token!/2","title":"BorsNG.GitHub.Server.raw_token!/2","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Server.html#start_link/0","title":"BorsNG.GitHub.Server.start_link/0","type":"function"},{"doc":"Uses a token from the cache, or, if the request fails, retry without using the cached token.","ref":"BorsNG.GitHub.Server.html#use_token!/3","title":"BorsNG.GitHub.Server.use_token!/3","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:tcollaborator/0","title":"BorsNG.GitHub.Server.tcollaborator/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:tconn/0","title":"BorsNG.GitHub.Server.tconn/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:tpr/0","title":"BorsNG.GitHub.Server.tpr/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:trepo/0","title":"BorsNG.GitHub.Server.trepo/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:ttoken/0","title":"BorsNG.GitHub.Server.ttoken/0","type":"type"},{"doc":"The token cache.","ref":"BorsNG.GitHub.Server.html#t:ttokenreg/0","title":"BorsNG.GitHub.Server.ttokenreg/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:tuser/0","title":"BorsNG.GitHub.Server.tuser/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Server.html#t:tuser_repo_perms/0","title":"BorsNG.GitHub.Server.tuser_repo_perms/0","type":"type"},{"doc":"Provides a fake connection to GitHub's REST API. This is used for unit testing and when running in a &quot;dev&quot; environment, like on a local machine. It's basically just a genserver frontend for a big map; you can put and get its state, and other functions will mutate or read subsets of it. For example, I can run iex -S mix phx.server and do this: iex&gt; # Push state to &quot;GitHub&quot; iex&gt; alias BorsNG.GitHub iex&gt; alias BorsNG.GitHub.ServerMock iex&gt; ServerMock . put_state ( %{ ...&gt; { :installation , 91 } =&gt; %{ repos : [ ...&gt; % GitHub.Repo { ...&gt; id : 14 , ...&gt; name : &quot;test/repo&quot; , ...&gt; owner : %{ ...&gt; id : 6 , ...&gt; login : &quot;bors-fanboi&quot; , ...&gt; avatar_url : &quot;data:image/svg+xml,&lt;svg&gt;&lt;/svg&gt;&quot; , ...&gt; type : :user ...&gt; } } ...&gt; ] } , ...&gt; { { :installation , 91 } , 14 } =&gt; %{ ...&gt; branches : %{ } , ...&gt; commits : %{ } , ...&gt; comments : %{ 1 =&gt; [ ] } , ...&gt; pulls : %{ ...&gt; 1 =&gt; % GitHub.Pr { ...&gt; number : 1 , ...&gt; title : &quot;Test&quot; , ...&gt; body : &quot;Mess&quot; , ...&gt; state : :open , ...&gt; base_ref : &quot;master&quot; , ...&gt; head_sha : &quot;00000001&quot; , ...&gt; user : % GitHub.User { ...&gt; id : 6 , ...&gt; login : &quot;bors-fanboi&quot; , ...&gt; avatar_url : &quot;data:image/svg+xml,&lt;svg&gt;&lt;/svg&gt;&quot; } } } , ...&gt; pr_commits : %{ ...&gt; 1 =&gt; [ ...&gt; % GitHub.Commit { ...&gt; sha : &quot;00000001&quot; , ...&gt; author_name : &quot;Bors Fanboi&quot; , ...&gt; author_email : &quot;bors-fanboi@example.com&quot; } ...&gt; ] } , ...&gt; statuses : %{ } , ...&gt; files : %{ } } } ) iex&gt; GitHub . get_open_prs! ( { { :installation , 91 } , 14 } ) [ % BorsNG.GitHub.Pr { number : 1 , title : &quot;Test&quot; , body : &quot;Mess&quot; , state : :open , base_ref : &quot;master&quot; , head_sha : &quot;00000001&quot; , user : % BorsNG.GitHub.User { id : 6 , login : &quot;bors-fanboi&quot; , avatar_url : &quot;data:image/svg+xml,&lt;svg&gt;&lt;/svg&gt;&quot; } } ]","ref":"BorsNG.GitHub.ServerMock.html","title":"BorsNG.GitHub.ServerMock","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.GitHub.ServerMock.html#child_spec/1","title":"BorsNG.GitHub.ServerMock.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#do_handle_call/4","title":"BorsNG.GitHub.ServerMock.do_handle_call/4","type":"function"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#get_state/0","title":"BorsNG.GitHub.ServerMock.get_state/0","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.GitHub.ServerMock.html#init/1","title":"BorsNG.GitHub.ServerMock.init/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#put_state/1","title":"BorsNG.GitHub.ServerMock.put_state/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#start_link/0","title":"BorsNG.GitHub.ServerMock.start_link/0","type":"function"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tbranch/0","title":"BorsNG.GitHub.ServerMock.tbranch/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tcollaborator/0","title":"BorsNG.GitHub.ServerMock.tcollaborator/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tcommit/0","title":"BorsNG.GitHub.ServerMock.tcommit/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tconn/0","title":"BorsNG.GitHub.ServerMock.tconn/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:trepo/0","title":"BorsNG.GitHub.ServerMock.trepo/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tstate/0","title":"BorsNG.GitHub.ServerMock.tstate/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tsynthesized/0","title":"BorsNG.GitHub.ServerMock.tsynthesized/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:ttoken/0","title":"BorsNG.GitHub.ServerMock.ttoken/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.ServerMock.html#t:tuser/0","title":"BorsNG.GitHub.ServerMock.tuser/0","type":"type"},{"doc":"The GitHub structure of a team account.","ref":"BorsNG.GitHub.Team.html","title":"BorsNG.GitHub.Team","type":"module"},{"doc":"Convert from Poison-decoded JSON to a User struct.","ref":"BorsNG.GitHub.Team.html#from_json/1","title":"BorsNG.GitHub.Team.from_json/1","type":"function"},{"doc":"Convert from Poison-decoded JSON to a User struct.","ref":"BorsNG.GitHub.Team.html#from_json!/1","title":"BorsNG.GitHub.Team.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.Team.html#t:t/0","title":"BorsNG.GitHub.Team.t/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.Team.html#t:tjson/0","title":"BorsNG.GitHub.Team.tjson/0","type":"type"},{"doc":"The GitHub structure of a user account. This is different from FullUser since this has many fewer fields.","ref":"BorsNG.GitHub.User.html","title":"BorsNG.GitHub.User","type":"module"},{"doc":"Convert from Poison-decoded JSON to a User struct.","ref":"BorsNG.GitHub.User.html#from_json/1","title":"BorsNG.GitHub.User.from_json/1","type":"function"},{"doc":"Convert from Poison-decoded JSON to a User struct.","ref":"BorsNG.GitHub.User.html#from_json!/1","title":"BorsNG.GitHub.User.from_json!/1","type":"function"},{"doc":"","ref":"BorsNG.GitHub.User.html#t:t/0","title":"BorsNG.GitHub.User.t/0","type":"type"},{"doc":"","ref":"BorsNG.GitHub.User.html#t:tjson/0","title":"BorsNG.GitHub.User.tjson/0","type":"type"},{"doc":"The common wrapper for all pages; namely, the bar along the top and the disclaimer along the bottom.","ref":"BorsNG.LayoutView.html","title":"BorsNG.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.LayoutView.html#__resource__/0","title":"BorsNG.LayoutView.__resource__/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_commit/0","title":"BorsNG.LayoutView.get_commit/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_footer_html/0","title":"BorsNG.LayoutView.get_footer_html/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_git_commit/0","title":"BorsNG.LayoutView.get_git_commit/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_header_html/0","title":"BorsNG.LayoutView.get_header_html/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_heroku_commit/0","title":"BorsNG.LayoutView.get_heroku_commit/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_release_version/0","title":"BorsNG.LayoutView.get_release_version/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_tag/0","title":"BorsNG.LayoutView.get_tag/0","type":"function"},{"doc":"","ref":"BorsNG.LayoutView.html#get_version/0","title":"BorsNG.LayoutView.get_version/0","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.LayoutView.html#render/2","title":"BorsNG.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.LayoutView.html#template_not_found/2","title":"BorsNG.LayoutView.template_not_found/2","type":"function"},{"doc":"The controller for the front-page / dashboard. This will either show a dashboard, if the user is authenticated, or a rundown of what BorsNG is, if the user is not.","ref":"BorsNG.PageController.html","title":"BorsNG.PageController","type":"module"},{"doc":"","ref":"BorsNG.PageController.html#index/2","title":"BorsNG.PageController.index/2","type":"function"},{"doc":"The dashboard and greeting page.","ref":"BorsNG.PageView.html","title":"BorsNG.PageView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.PageView.html#__resource__/0","title":"BorsNG.PageView.__resource__/0","type":"function"},{"doc":"Checks to see if the variable is a list with elements then returns false.","ref":"BorsNG.PageView.html#empty?/1","title":"BorsNG.PageView.empty?/1","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.PageView.html#render/2","title":"BorsNG.PageView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.PageView.html#template_not_found/2","title":"BorsNG.PageView.template_not_found/2","type":"function"},{"doc":"Shows a list of repositories, a single repository, and the repository's settings page. n.b. We call it a project internally, though it corresponds to a GitHub repository. This is to avoid confusing a GitHub repo with an Ecto repo.","ref":"BorsNG.ProjectController.html","title":"BorsNG.ProjectController","type":"module"},{"doc":"","ref":"BorsNG.ProjectController.html#add_member/4","title":"BorsNG.ProjectController.add_member/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#add_reviewer/2","title":"BorsNG.ProjectController.add_reviewer/2","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#add_reviewer/4","title":"BorsNG.ProjectController.add_reviewer/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#cancel_all/4","title":"BorsNG.ProjectController.cancel_all/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#confirm_add_reviewer/4","title":"BorsNG.ProjectController.confirm_add_reviewer/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#index/2","title":"BorsNG.ProjectController.index/2","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#log/4","title":"BorsNG.ProjectController.log/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#log_page/4","title":"BorsNG.ProjectController.log_page/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#remove_member/4","title":"BorsNG.ProjectController.remove_member/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#remove_reviewer/4","title":"BorsNG.ProjectController.remove_reviewer/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#settings/4","title":"BorsNG.ProjectController.settings/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#show/4","title":"BorsNG.ProjectController.show/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#synchronize/4","title":"BorsNG.ProjectController.synchronize/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#update_branches/4","title":"BorsNG.ProjectController.update_branches/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#update_member_settings/4","title":"BorsNG.ProjectController.update_member_settings/4","type":"function"},{"doc":"","ref":"BorsNG.ProjectController.html#update_reviewer_settings/4","title":"BorsNG.ProjectController.update_reviewer_settings/4","type":"function"},{"doc":"Phoenix channel for notifying users when a repository gets a visible change in its list of PRs. This channel gets notified when: the project gets a new patch. a patch goes from &quot;awaiting review&quot; to &quot;waiting&quot; a patch goes from &quot;waiting&quot; to &quot;running&quot; a patch goes from &quot;running&quot; to &quot;awaiting review&quot; (it failed) a patch goes from &quot;running&quot; to &quot;complete&quot; (it passed) a patch changes from &quot;open&quot; to &quot;closed&quot;, or from &quot;closed&quot; to &quot;open&quot;","ref":"BorsNG.ProjectPingChannel.html","title":"BorsNG.ProjectPingChannel","type":"module"},{"doc":"","ref":"BorsNG.ProjectPingChannel.html#child_spec/1","title":"BorsNG.ProjectPingChannel.child_spec/1","type":"function"},{"doc":"Callback implementation for Phoenix.Channel.handle_out/3 .","ref":"BorsNG.ProjectPingChannel.html#handle_out/3","title":"BorsNG.ProjectPingChannel.handle_out/3","type":"function"},{"doc":"Callback implementation for Phoenix.Channel.join/3 .","ref":"BorsNG.ProjectPingChannel.html#join/3","title":"BorsNG.ProjectPingChannel.join/3","type":"function"},{"doc":"","ref":"BorsNG.ProjectPingChannel.html#start_link/1","title":"BorsNG.ProjectPingChannel.start_link/1","type":"function"},{"doc":"The list of repository's, and each individual repository page. n.b. We call it a project internally, though it corresponds to a GitHub repository. This is to avoid confusing a GitHub repo with an Ecto repo.","ref":"BorsNG.ProjectView.html","title":"BorsNG.ProjectView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"BorsNG.ProjectView.html#__resource__/0","title":"BorsNG.ProjectView.__resource__/0","type":"function"},{"doc":"Checks to see if the variable is a list with elements then returns false.","ref":"BorsNG.ProjectView.html#empty?/1","title":"BorsNG.ProjectView.empty?/1","type":"function"},{"doc":"","ref":"BorsNG.ProjectView.html#htmlify_naive_datetime/1","title":"BorsNG.ProjectView.htmlify_naive_datetime/1","type":"function"},{"doc":"Renders the given template locally.","ref":"BorsNG.ProjectView.html#render/2","title":"BorsNG.ProjectView.render/2","type":"function"},{"doc":"","ref":"BorsNG.ProjectView.html#stringify_state/1","title":"BorsNG.ProjectView.stringify_state/1","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"BorsNG.ProjectView.html#template_not_found/2","title":"BorsNG.ProjectView.template_not_found/2","type":"function"},{"doc":"","ref":"BorsNG.ProjectView.html#truncate_commit/1","title":"BorsNG.ProjectView.truncate_commit/1","type":"function"},{"doc":"This module maps from URLs to controllers and plugs. It layers on pre-filters, primarily the session, flash, CSRF protection, secure headers, and user authentication part of the session.","ref":"BorsNG.Router.html","title":"BorsNG.Router","type":"module"},{"doc":"","ref":"BorsNG.Router.html#browser_admin/2","title":"BorsNG.Router.browser_admin/2","type":"function"},{"doc":"","ref":"BorsNG.Router.html#browser_ajax/2","title":"BorsNG.Router.browser_ajax/2","type":"function"},{"doc":"","ref":"BorsNG.Router.html#browser_login/2","title":"BorsNG.Router.browser_login/2","type":"function"},{"doc":"","ref":"BorsNG.Router.html#browser_page/2","title":"BorsNG.Router.browser_page/2","type":"function"},{"doc":"","ref":"BorsNG.Router.html#browser_session/2","title":"BorsNG.Router.browser_session/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"BorsNG.Router.html#call/2","title":"BorsNG.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"BorsNG.Router.html#init/1","title":"BorsNG.Router.init/1","type":"function"},{"doc":"","ref":"BorsNG.Router.html#webhook/2","title":"BorsNG.Router.webhook/2","type":"function"},{"doc":"Module with named helpers generated from BorsNG.Router.","ref":"BorsNG.Router.Helpers.html","title":"BorsNG.Router.Helpers","type":"module"},{"doc":"","ref":"BorsNG.Router.Helpers.html#admin_path/2","title":"BorsNG.Router.Helpers.admin_path/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#admin_path/3","title":"BorsNG.Router.Helpers.admin_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#admin_url/2","title":"BorsNG.Router.Helpers.admin_url/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#admin_url/3","title":"BorsNG.Router.Helpers.admin_url/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#auth_path/2","title":"BorsNG.Router.Helpers.auth_path/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#auth_path/3","title":"BorsNG.Router.Helpers.auth_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#auth_path/4","title":"BorsNG.Router.Helpers.auth_path/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#auth_url/2","title":"BorsNG.Router.Helpers.auth_url/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#auth_url/3","title":"BorsNG.Router.Helpers.auth_url/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#auth_url/4","title":"BorsNG.Router.Helpers.auth_url/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#batch_path/3","title":"BorsNG.Router.Helpers.batch_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#batch_path/4","title":"BorsNG.Router.Helpers.batch_path/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#batch_url/3","title":"BorsNG.Router.Helpers.batch_url/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#batch_url/4","title":"BorsNG.Router.Helpers.batch_url/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#page_path/2","title":"BorsNG.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#page_path/3","title":"BorsNG.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#page_url/2","title":"BorsNG.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#page_url/3","title":"BorsNG.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"BorsNG.Router.Helpers.html#path/2","title":"BorsNG.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_path/2","title":"BorsNG.Router.Helpers.project_path/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_path/3","title":"BorsNG.Router.Helpers.project_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_path/4","title":"BorsNG.Router.Helpers.project_path/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_path/5","title":"BorsNG.Router.Helpers.project_path/5","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_url/2","title":"BorsNG.Router.Helpers.project_url/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_url/3","title":"BorsNG.Router.Helpers.project_url/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_url/4","title":"BorsNG.Router.Helpers.project_url/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#project_url/5","title":"BorsNG.Router.Helpers.project_url/5","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#server_path/2","title":"BorsNG.Router.Helpers.server_path/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#server_path/3","title":"BorsNG.Router.Helpers.server_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#server_url/2","title":"BorsNG.Router.Helpers.server_url/2","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#server_url/3","title":"BorsNG.Router.Helpers.server_url/3","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"BorsNG.Router.Helpers.html#static_integrity/2","title":"BorsNG.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"BorsNG.Router.Helpers.html#static_path/2","title":"BorsNG.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"BorsNG.Router.Helpers.html#static_url/2","title":"BorsNG.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"BorsNG.Router.Helpers.html#url/1","title":"BorsNG.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#webhook_path/3","title":"BorsNG.Router.Helpers.webhook_path/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#webhook_path/4","title":"BorsNG.Router.Helpers.webhook_path/4","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#webhook_url/3","title":"BorsNG.Router.Helpers.webhook_url/3","type":"function"},{"doc":"","ref":"BorsNG.Router.Helpers.html#webhook_url/4","title":"BorsNG.Router.Helpers.webhook_url/4","type":"function"},{"doc":"The controller for server-related actions such as health checking","ref":"BorsNG.ServerController.html","title":"BorsNG.ServerController","type":"module"},{"doc":"","ref":"BorsNG.ServerController.html#health/2","title":"BorsNG.ServerController.health/2","type":"function"},{"doc":"The router for push notifications. It goes from &quot;channel names&quot; to &quot;channel modules&quot;, and it implements most of the user authentication stuff.","ref":"BorsNG.UserSocket.html","title":"BorsNG.UserSocket","type":"module"},{"doc":"Callback implementation for Phoenix.Socket.connect/2 .","ref":"BorsNG.UserSocket.html#connect/2","title":"BorsNG.UserSocket.connect/2","type":"function"},{"doc":"Callback implementation for Phoenix.Socket.id/1 .","ref":"BorsNG.UserSocket.html#id/1","title":"BorsNG.UserSocket.id/1","type":"function"},{"doc":"A module that keeps using definitions for controllers, views and so on. This can be used in your application as: use BorsNG.Web , :controller use BorsNG.Web , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below.","ref":"BorsNG.Web.html","title":"BorsNG.Web","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"BorsNG.Web.html#__using__/1","title":"BorsNG.Web.__using__/1","type":"macro"},{"doc":"","ref":"BorsNG.Web.html#channel/0","title":"BorsNG.Web.channel/0","type":"function"},{"doc":"","ref":"BorsNG.Web.html#controller/0","title":"BorsNG.Web.controller/0","type":"function"},{"doc":"","ref":"BorsNG.Web.html#router/0","title":"BorsNG.Web.router/0","type":"function"},{"doc":"","ref":"BorsNG.Web.html#view/0","title":"BorsNG.Web.view/0","type":"function"},{"doc":"The webhook controller responds to HTTP requests that are initiated from other services (currently, just GitHub). For example, I can run iex -S mix phx.server and do this: iex&gt; # Push state to &quot;GitHub&quot; iex&gt; alias BorsNG.GitHub iex&gt; alias BorsNG.GitHub.ServerMock iex&gt; alias BorsNG.Database iex&gt; ServerMock . put_state ( %{ ...&gt; { :installation , 91 } =&gt; %{ repos : [ ...&gt; % GitHub.Repo { ...&gt; id : 14 , ...&gt; name : &quot;test/repo&quot; , ...&gt; owner : %{ ...&gt; id : 6 , ...&gt; login : &quot;bors-fanboi&quot; , ...&gt; avatar_url : &quot;data:image/svg+xml,&lt;svg&gt;&lt;/svg&gt;&quot; , ...&gt; type : :user ...&gt; } } ...&gt; ] } , ...&gt; { { :installation , 91 } , 14 } =&gt; %{ ...&gt; branches : %{ } , ...&gt; comments : %{ 1 =&gt; [ ] } , ...&gt; pulls : %{ ...&gt; 1 =&gt; % GitHub.Pr { ...&gt; number : 1 , ...&gt; title : &quot;Test&quot; , ...&gt; body : &quot;Mess&quot; , ...&gt; state : :open , ...&gt; base_ref : &quot;master&quot; , ...&gt; head_sha : &quot;00000001&quot; , ...&gt; user : % GitHub.User { ...&gt; id : 6 , ...&gt; login : &quot;bors-fanboi&quot; , ...&gt; avatar_url : &quot;data:image/svg+xml,&lt;svg&gt;&lt;/svg&gt;&quot; } } } , ...&gt; statuses : %{ } , ...&gt; files : %{ } } } ) iex&gt; # The installation now exists; notify bors about it. iex&gt; BorsNG.WebhookController . do_webhook ( %{ ...&gt; body_params : %{ ...&gt; &quot;installation&quot; =&gt; %{ &quot;id&quot; =&gt; 91 } , ...&gt; &quot;sender&quot; =&gt; %{ ...&gt; &quot;id&quot; =&gt; 6 , ...&gt; &quot;login&quot; =&gt; &quot;bors-fanboi&quot; , ...&gt; &quot;avatar_url&quot; =&gt; &quot;&quot; } , ...&gt; &quot;action&quot; =&gt; &quot;created&quot; } } , &quot;github&quot; , &quot;installation&quot; ) iex&gt; # This starts a background sync process with the installation. iex&gt; # Watch it happen in the user interface. iex&gt; BorsNG.Worker.SyncerInstallation . wait_hot_spin_xref ( 91 ) iex&gt; proj = Database.Repo . get_by! ( Database.Project , repo_xref : 14 ) iex&gt; proj . name &quot;test/repo&quot; iex&gt; patch = Database.Repo . get_by! ( Database.Patch , pr_xref : 1 ) iex&gt; patch . title &quot;Test&quot;","ref":"BorsNG.WebhookController.html","title":"BorsNG.WebhookController","type":"module"},{"doc":"","ref":"BorsNG.WebhookController.html#do_webhook/3","title":"BorsNG.WebhookController.do_webhook/3","type":"function"},{"doc":"","ref":"BorsNG.WebhookController.html#do_webhook_installation_sync/1","title":"BorsNG.WebhookController.do_webhook_installation_sync/1","type":"function"},{"doc":"","ref":"BorsNG.WebhookController.html#do_webhook_pr/2","title":"BorsNG.WebhookController.do_webhook_pr/2","type":"function"},{"doc":"This action is reached via /webhook/:provider","ref":"BorsNG.WebhookController.html#webhook/2","title":"BorsNG.WebhookController.webhook/2","type":"function"},{"doc":"Parse the GitHub webhook payload (as JSON) and verify the HMAC-SHA1 signature.","ref":"BorsNG.WebhookParserPlug.html","title":"BorsNG.WebhookParserPlug","type":"module"},{"doc":"","ref":"BorsNG.WebhookParserPlug.html#call/2","title":"BorsNG.WebhookParserPlug.call/2","type":"function"},{"doc":"","ref":"BorsNG.WebhookParserPlug.html#init/1","title":"BorsNG.WebhookParserPlug.init/1","type":"function"},{"doc":"","ref":"BorsNG.WebhookParserPlug.html#run/3","title":"BorsNG.WebhookParserPlug.run/3","type":"function"},{"doc":"An &quot;Attemptor&quot; manages the set of running attempts (that is, &quot;try jobs&quot;). It implements this set of rules: When a patch is tried, We immediately merge it with master into the trying branch. The project's CI is occasionally polled, if a attempt is currently running. After polling, the completion logic is run. If a notification related to the underlying CI is received, the completion logic is run. When the completion logic is run, the either succeeded or failed.","ref":"BorsNG.Worker.Attemptor.html","title":"BorsNG.Worker.Attemptor","type":"module"},{"doc":"","ref":"BorsNG.Worker.Attemptor.html#cancel/2","title":"BorsNG.Worker.Attemptor.cancel/2","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.Attemptor.html#child_spec/1","title":"BorsNG.Worker.Attemptor.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.html#do_handle_cast/2","title":"BorsNG.Worker.Attemptor.do_handle_cast/2","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.Worker.Attemptor.html#init/1","title":"BorsNG.Worker.Attemptor.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.html#poll/1","title":"BorsNG.Worker.Attemptor.poll/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.html#start_link/1","title":"BorsNG.Worker.Attemptor.start_link/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.html#status/2","title":"BorsNG.Worker.Attemptor.status/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.html#tried/3","title":"BorsNG.Worker.Attemptor.tried/3","type":"function"},{"doc":"The &quot;Attemptor&quot; manages the project's try branch. This is the registry of each individual attemptor. It starts the attemptor if it doesn't exist, restarts it if it crashes, and logs the crashes because that's needed sometimes. Note that the attemptor and registry are always on the same node. Sharding between them will be done by directing which registry to go to.","ref":"BorsNG.Worker.Attemptor.Registry.html","title":"BorsNG.Worker.Attemptor.Registry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.Attemptor.Registry.html#child_spec/1","title":"BorsNG.Worker.Attemptor.Registry.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.Registry.html#do_start/1","title":"BorsNG.Worker.Attemptor.Registry.do_start/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.Registry.html#get/1","title":"BorsNG.Worker.Attemptor.Registry.get/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.Worker.Attemptor.Registry.html#init/1","title":"BorsNG.Worker.Attemptor.Registry.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.Registry.html#start_and_insert/2","title":"BorsNG.Worker.Attemptor.Registry.start_and_insert/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.Registry.html#start_link/0","title":"BorsNG.Worker.Attemptor.Registry.start_link/0","type":"function"},{"doc":"The supervisor of all of the batchers.","ref":"BorsNG.Worker.Attemptor.Supervisor.html","title":"BorsNG.Worker.Attemptor.Supervisor","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.Attemptor.Supervisor.html#child_spec/1","title":"BorsNG.Worker.Attemptor.Supervisor.child_spec/1","type":"function"},{"doc":"Callback implementation for DynamicSupervisor.init/1 .","ref":"BorsNG.Worker.Attemptor.Supervisor.html#init/1","title":"BorsNG.Worker.Attemptor.Supervisor.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.Supervisor.html#start/1","title":"BorsNG.Worker.Attemptor.Supervisor.start/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Attemptor.Supervisor.html#start_link/0","title":"BorsNG.Worker.Attemptor.Supervisor.start_link/0","type":"function"},{"doc":"A &quot;Batcher&quot; manages the backlog of batches a project has. It implements this set of rules: When a patch is reviewed (&quot;r+'ed&quot;), it gets added to the project's non-running batch. If no such batch exists, it creates it. After a short delay, if there is no currently running batch, the project's non-running batch is started. The project's CI is occasionally polled, if a batch is currently running. After polling, the completion logic is run. If a notification related to the underlying CI is received, the completion logic is run. When the completion logic is run, the batch is either bisected (if it failed and there are two or more patches in it), blocked (if it failed and there is only one patch in it), pushed to master (if it passed), or (if there are still CI jobs with no results) it is left alone.","ref":"BorsNG.Worker.Batcher.html","title":"BorsNG.Worker.Batcher","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#cancel/2","title":"BorsNG.Worker.Batcher.cancel/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#cancel_all/1","title":"BorsNG.Worker.Batcher.cancel_all/1","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.Batcher.html#child_spec/1","title":"BorsNG.Worker.Batcher.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#do_handle_cast/2","title":"BorsNG.Worker.Batcher.do_handle_cast/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#gather_co_authors/2","title":"BorsNG.Worker.Batcher.gather_co_authors/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#get_new_batch/4","title":"BorsNG.Worker.Batcher.get_new_batch/4","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.Worker.Batcher.html#init/1","title":"BorsNG.Worker.Batcher.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#poll/1","title":"BorsNG.Worker.Batcher.poll/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#reviewed/3","title":"BorsNG.Worker.Batcher.reviewed/3","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#set_is_single/3","title":"BorsNG.Worker.Batcher.set_is_single/3","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#set_priority/3","title":"BorsNG.Worker.Batcher.set_priority/3","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#sort_batches/1","title":"BorsNG.Worker.Batcher.sort_batches/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#start_link/1","title":"BorsNG.Worker.Batcher.start_link/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.html#status/2","title":"BorsNG.Worker.Batcher.status/2","type":"function"},{"doc":"The format for bors.toml . It looks like this: status = [ &quot;continuous-integration/travis-ci/push&quot; , &quot;continuous-integration/appveyor/branch&quot; ] block_labels = [ &quot;S-do-not-merge-yet&quot; ] pr_status = [ &quot;continuous-integration/travis-ci/pull&quot; ]","ref":"BorsNG.Worker.Batcher.BorsToml.html","title":"BorsNG.Worker.Batcher.BorsToml","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.BorsToml.html#new/1","title":"BorsNG.Worker.Batcher.BorsToml.new/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.BorsToml.html#t:err/0","title":"BorsNG.Worker.Batcher.BorsToml.err/0","type":"type"},{"doc":"","ref":"BorsNG.Worker.Batcher.BorsToml.html#t:t/0","title":"BorsNG.Worker.Batcher.BorsToml.t/0","type":"type"},{"doc":"","ref":"BorsNG.Worker.Batcher.BorsToml.html#t:tcommitter/0","title":"BorsNG.Worker.Batcher.BorsToml.tcommitter/0","type":"type"},{"doc":"","ref":"BorsNG.Worker.Batcher.Divider.html","title":"BorsNG.Worker.Batcher.Divider","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.Divider.html#clone_batch/3","title":"BorsNG.Worker.Batcher.Divider.clone_batch/3","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Divider.html#split_batch/2","title":"BorsNG.Worker.Batcher.Divider.split_batch/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Divider.html#split_batch_with_conflicts/2","title":"BorsNG.Worker.Batcher.Divider.split_batch_with_conflicts/2","type":"function"},{"doc":"Get the bors configuration from a repository. This will use bors.toml , if available, or it will attempt to infer it from other files in the repo.","ref":"BorsNG.Worker.Batcher.GetBorsToml.html","title":"BorsNG.Worker.Batcher.GetBorsToml","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.GetBorsToml.html#get/2","title":"BorsNG.Worker.Batcher.GetBorsToml.get/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.GetBorsToml.html#t:terror/0","title":"BorsNG.Worker.Batcher.GetBorsToml.terror/0","type":"type"},{"doc":"Get the CODEOWNERS file from the repository","ref":"BorsNG.Worker.Batcher.GetCodeOwners.html","title":"BorsNG.Worker.Batcher.GetCodeOwners","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.GetCodeOwners.html#get/2","title":"BorsNG.Worker.Batcher.GetCodeOwners.get/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.GetCodeOwners.html#t:terror/0","title":"BorsNG.Worker.Batcher.GetCodeOwners.terror/0","type":"type"},{"doc":"User-readable strings that go in commit messages and comments.","ref":"BorsNG.Worker.Batcher.Message.html","title":"BorsNG.Worker.Batcher.Message","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#cut_body/2","title":"BorsNG.Worker.Batcher.Message.cut_body/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#gen_status_link/1","title":"BorsNG.Worker.Batcher.Message.gen_status_link/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#generate_bors_toml_error/1","title":"BorsNG.Worker.Batcher.Message.generate_bors_toml_error/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#generate_commit_message/4","title":"BorsNG.Worker.Batcher.Message.generate_commit_message/4","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#generate_message/1","title":"BorsNG.Worker.Batcher.Message.generate_message/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#generate_squash_commit_message/4","title":"BorsNG.Worker.Batcher.Message.generate_squash_commit_message/4","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#generate_status/1","title":"BorsNG.Worker.Batcher.Message.generate_status/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Message.html#get_is_new_year/0","title":"BorsNG.Worker.Batcher.Message.get_is_new_year/0","type":"function"},{"doc":"The &quot;Batcher&quot; manages the backlog of batches that each project has. This is the registry of each individual batcher. It starts the batcher if it doesn't exist, restarts it if it crashes, and logs the crashes because that's needed sometimes. Note that the batcher and registry are always on the same node. Sharding between them will be done by directing which registry to go to.","ref":"BorsNG.Worker.Batcher.Registry.html","title":"BorsNG.Worker.Batcher.Registry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.Batcher.Registry.html#child_spec/1","title":"BorsNG.Worker.Batcher.Registry.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Registry.html#do_start/1","title":"BorsNG.Worker.Batcher.Registry.do_start/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Registry.html#get/2","title":"BorsNG.Worker.Batcher.Registry.get/2","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.Worker.Batcher.Registry.html#init/1","title":"BorsNG.Worker.Batcher.Registry.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Registry.html#monitor/2","title":"BorsNG.Worker.Batcher.Registry.monitor/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Registry.html#start_link/0","title":"BorsNG.Worker.Batcher.Registry.start_link/0","type":"function"},{"doc":"The batcher state machine. It takes a list of status states, and emits a batch state.","ref":"BorsNG.Worker.Batcher.State.html","title":"BorsNG.Worker.Batcher.State","type":"module"},{"doc":"","ref":"BorsNG.Worker.Batcher.State.html#summarize/2","title":"BorsNG.Worker.Batcher.State.summarize/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.State.html#summary_database_statuses/1","title":"BorsNG.Worker.Batcher.State.summary_database_statuses/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.State.html#summary_states/1","title":"BorsNG.Worker.Batcher.State.summary_states/1","type":"function"},{"doc":"The supervisor of all of the batchers.","ref":"BorsNG.Worker.Batcher.Supervisor.html","title":"BorsNG.Worker.Batcher.Supervisor","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.Batcher.Supervisor.html#child_spec/1","title":"BorsNG.Worker.Batcher.Supervisor.child_spec/1","type":"function"},{"doc":"Callback implementation for DynamicSupervisor.init/1 .","ref":"BorsNG.Worker.Batcher.Supervisor.html#init/1","title":"BorsNG.Worker.Batcher.Supervisor.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Supervisor.html#start/1","title":"BorsNG.Worker.Batcher.Supervisor.start/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Batcher.Supervisor.html#start_link/0","title":"BorsNG.Worker.Batcher.Supervisor.start_link/0","type":"function"},{"doc":"BranchDeleter controls merged branches removal if delete_merged_branches is true in bors.toml file. By default we wait for pull request &quot;closed&quot; event with pr merged flag set. Also since event arrival is not guaranteed we poll every 5 minutes and if pr is merged we delete pr head branch.","ref":"BorsNG.Worker.BranchDeleter.html","title":"BorsNG.Worker.BranchDeleter","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BorsNG.Worker.BranchDeleter.html#child_spec/1","title":"BorsNG.Worker.BranchDeleter.child_spec/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.BranchDeleter.html#delete/1","title":"BorsNG.Worker.BranchDeleter.delete/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.BranchDeleter.html#handle_info/1","title":"BorsNG.Worker.BranchDeleter.handle_info/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"BorsNG.Worker.BranchDeleter.html#init/1","title":"BorsNG.Worker.BranchDeleter.init/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.BranchDeleter.html#start_link/0","title":"BorsNG.Worker.BranchDeleter.start_link/0","type":"function"},{"doc":"A background task that pulls a full list of opened pull requests from a repo. Patches that don't come up get closed, and patches that don't exist get created.","ref":"BorsNG.Worker.Syncer.html","title":"BorsNG.Worker.Syncer","type":"module"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#do_synchronize!/2","title":"BorsNG.Worker.Syncer.do_synchronize!/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#start_synchronize_project/1","title":"BorsNG.Worker.Syncer.start_synchronize_project/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#sync_patch/2","title":"BorsNG.Worker.Syncer.sync_patch/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#sync_user/1","title":"BorsNG.Worker.Syncer.sync_user/1","type":"function"},{"doc":"Returns a list of all patches that should be synchronized. Note: This will return a list of all opened pull requests, as well as a list of patches that should be closed. It does not perform any filtering on open PRs, because those still need to have their metadata synced.","ref":"BorsNG.Worker.Syncer.html#synchronize_patches/2","title":"BorsNG.Worker.Syncer.synchronize_patches/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#synchronize_project/1","title":"BorsNG.Worker.Syncer.synchronize_project/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#synchronize_project_collaborators/2","title":"BorsNG.Worker.Syncer.synchronize_project_collaborators/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#synchronize_project_collaborators_by_role/4","title":"BorsNG.Worker.Syncer.synchronize_project_collaborators_by_role/4","type":"function"},{"doc":"Wait for synchronization to finish by hot-spinning. Used in test cases.","ref":"BorsNG.Worker.Syncer.html#wait_hot_spin/1","title":"BorsNG.Worker.Syncer.wait_hot_spin/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#t:tcollaborator/0","title":"BorsNG.Worker.Syncer.tcollaborator/0","type":"type"},{"doc":"","ref":"BorsNG.Worker.Syncer.html#t:trepo_perm/0","title":"BorsNG.Worker.Syncer.trepo_perm/0","type":"type"},{"doc":"A background task that pulls a full list of repositories that bors is on. Projects that don't come up get removed, and projects hat don't exist get created.","ref":"BorsNG.Worker.SyncerInstallation.html","title":"BorsNG.Worker.SyncerInstallation","type":"module"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#add/2","title":"BorsNG.Worker.SyncerInstallation.add/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#plan_synchronize/3","title":"BorsNG.Worker.SyncerInstallation.plan_synchronize/3","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#remove/2","title":"BorsNG.Worker.SyncerInstallation.remove/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#start_synchronize_all_installations/0","title":"BorsNG.Worker.SyncerInstallation.start_synchronize_all_installations/0","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#start_synchronize_installation/1","title":"BorsNG.Worker.SyncerInstallation.start_synchronize_installation/1","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#sync/2","title":"BorsNG.Worker.SyncerInstallation.sync/2","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#synchronize_all_installations/0","title":"BorsNG.Worker.SyncerInstallation.synchronize_all_installations/0","type":"function"},{"doc":"","ref":"BorsNG.Worker.SyncerInstallation.html#synchronize_installation/1","title":"BorsNG.Worker.SyncerInstallation.synchronize_installation/1","type":"function"},{"doc":"Wait for synchronization to finish by hot-spinning. Used in test cases.","ref":"BorsNG.Worker.SyncerInstallation.html#wait_hot_spin_xref/1","title":"BorsNG.Worker.SyncerInstallation.wait_hot_spin_xref/1","type":"function"},{"doc":"Delete old batches and patches from the database. Old patches and batches which are done processing generally are not useful to keep around. Deleting them regularly can keep the rows of your database tables under the small limits of some database providers. Examples mix bors . cleanup -- months 6 Command line options --months - the integer number of months to keep data","ref":"Mix.Tasks.Bors.Cleanup.html","title":"Mix.Tasks.Bors.Cleanup","type":"task"},{"doc":"","ref":"Mix.Tasks.Bors.Cleanup.html#repos/0","title":"Mix.Tasks.Bors.Cleanup.repos/0","type":"function"},{"doc":"When a controller detects that the user is doing something they shouldn't, it raises this error.","ref":"BorsNG.PermissionDeniedError.html","title":"BorsNG.PermissionDeniedError","type":"exception"},{"doc":"The innards of Bors-NG Bors-NG uses Ecto for all permanent data storage and Phoenix to implement the webserver portion (which is responsible for both the dashboard frontend and GitHub webhooks). Bors-NG also has a number of worker GenServers, to help isolate different projects from each other and perform background processing. You'll also want to do some terminology mapping between what we say to users and what we say in the code: Project → Repo: A Bors &quot;Project&quot; corresponds to a GitHub &quot;Repo.&quot; We do this renaming because Ecto already has the concept of a Repo . Attempt → Try: Try is a keyword in Elixir, and in a lot of other languages besides, so the code calls a try an attempt . Patch → PR: A Bors &quot;Patch&quot; corresponds to a GitHub &quot;Pull Request.&quot;","ref":"hacking.html","title":"The innards of Bors-NG","type":"extras"},{"doc":"In the source tree, you'll find the frontend in the lib/web folder. There is also a webhook controller in the lib/web/controllers folder. This isn't really part of the frontend, because the user won't be interacting with it, but rather GitHub will POST to it when comments are left, builds are completed, and new GitHub repositories are associated with our integration. The webhook controller is on a separate Plug pipeline for this reason.","ref":"hacking.html#the-frontend","title":"The innards of Bors-NG - The frontend","type":"extras"},{"doc":"In lib/worker , the worker GenServers are implemented. Worker.Batcher and Worker.Attemptor Batcher handles &quot;r+&quot;-ed patches, which the user is attempting to land in master. Attemptor handles &quot;try&quot;-ed patches. Batcher and Attemptor both have about the same structure: each project has zero or one instance of these workers at any time, and a registry GenServer lazily creates an instance if it's needed and none exists. The webhook controller sends a message to the appropriate worker when the user posts the comment on a pull request. The webhook controller also delivers status notifications for running builds, and the server will poll GitHub every half-hour just in case. These servers also keep all their state written to Ecto, so bors can pick up where it left off if it's restarted.","ref":"hacking.html#the-backend","title":"The innards of Bors-NG - The backend","type":"extras"},{"doc":"Found in the folder lib/github . GitHub.Server All requests made to GitHub's REST API (except a couple things related to oAuth) go through the &quot;GitHub API server.&quot; This server keeps a cache of installation tokens (so we don't constantly re-request them) and is responsible for rate limiting. It can be replaced with GitHub.ServerMock , for local testing. As a further development convenience, you can initialize some test data using GitHub.FriendlyMock , from the IEx REPL.","ref":"hacking.html#the-github-glue","title":"The innards of Bors-NG - The GitHub glue","type":"extras"},{"doc":"Getting started for contributors Thanks for wanting to help out with Bors-NG!","ref":"contributing.html","title":"Getting started for contributors","type":"extras"},{"doc":"If you've been using bors a lot, you can help other people use it by answering questions on the support forum . It's running on Discourse, the same app used by Elixir Forum and Rust Users.","ref":"contributing.html#answering-support-questions","title":"Getting started for contributors - Answering support questions","type":"extras"},{"doc":"Go ahead and submit an issue report; we can't fix a problem if we don't know about it. Even if you're not sure if it's a bug, go ahead and submit it. If a lot of users think it's a problem, even if we don't think it's &quot;really a bug,&quot; we'll probably try to figure out a way to fix it anyway. Bors needs to be useful, not just correct. Besides, that's why we call them &quot;issue reports&quot; instead of &quot;bug reports.&quot; If you get the chance, please use the search bar at the top of the issues list to see if somebody else already reported it. You don't have to do that, if you don't have time, or just can't think of what to search for. Think of it as extra credit. If we find a duplicate, we'll just leave a comment saying &quot;Duplicate of #some-other-issue-number&quot; (so that you know where the existing conversation is happening) and close it. Filing an issue is as easy as going to the new issue page and filling out the fields.","ref":"contributing.html#submitting-bug-reports","title":"Getting started for contributors - Submitting bug reports","type":"extras"},{"doc":"The best way to send changes to Bors-NG is to fork our repo, then open a pull request. GitHub has a howto for the fork-pull system on their own website. BTW, the hub CLI is really cool. With it, you can make a pull request that modifies this file by running these commands: $ hub clone bors - ng / bors - ng $ cd bors - ng $ hub fork $ git checkout - b fix_readme $ vim CONTRIBUTING . md $ git commit CONTRIBUTING . md $ git push - u &lt; YOUR GITHUB USERNAME &gt; HEAD $ hub pull - request You don't have to use anything like that if you don't want to, though.","ref":"contributing.html#sending-your-change-to-us","title":"Getting started for contributors - Sending your change to us","type":"extras"},{"doc":"If you're not sure what to work on, there's a list of easy-to-fix problems to get you started at https://bors.tech/starters . After you pick an issue, you should mention that you're working on it in a GitHub comment (so that we can mark it as assigned and avoid duplicate work). If you're having trouble fixing the problem, go ahead and ask questions right in the issue's comments section, even if your question seems unrelated to the issue itself.","ref":"contributing.html#finding-something-to-work-on","title":"Getting started for contributors - Finding something to work on","type":"extras"},{"doc":"If you'd like to add a new feature, or make big changes to the way bors works, head over to the RFC area in the forum and follow the instructions.","ref":"contributing.html#proposing-and-adding-new-features","title":"Getting started for contributors - Proposing and adding new features","type":"extras"},{"doc":"To work on bors-ng you will need: Erlang and Elixir installed and in PATH a local database instance, bors uses Postgres by default You can install Erlang and Elixir as you prefer, one way to do it without affecting other development environments is with asdf . The following shows you how to use asdf. If you already have Erlang and Elixir installed or prefer to install them in another way just skip to the next section. NOTE : please check the Erlang and Elixir versions against .github/workflows/main.yml to make sure you are using a supported version. Installing Erlang and Elixir with asdf To get started developing on bors with asdf install it as per the docs, then install Erlang and Elixir with the following commands (we assume you're on linux, YMMV on other OSs): asdf plugin-add erlang asdf install erlang 23.2 asdf plugin-add elixir asdf install elixir 1.11.4 # in the parent directory cat&lt;&lt;EOF &gt; ../.tool-versions elixir 1.11.4 erlang 23.2 EOF NOTE : please double check the Erlang and Elixir versions against .travis.yml to make sure you are using a supported version. Running tests locally You are now set for developing locally. For example to run the tests you will just have to start a postgres instance on localhost, using docker is the simplest way: docker run -it --rm --net=host -e POSTGRES_PASSWORD=Postgres1234 postgres:13 then in another shell you can run the tests as simply as: mix test to run a single test suite/case just pass the relative path to the test name and optionally the line number: mix test test/batcher/batcher_test.exs:3878","ref":"contributing.html#developing-locally","title":"Getting started for contributors - Developing locally","type":"extras"},{"doc":"A merge bot for GitHub pull requests Bors-NG implements a continuous-testing workflow where the main branch never breaks. It integrates GitHub pull requests with a tool like Travis CI that runs your tests. Other resources: Home page Documentation Support forum Publicly hosted instance (public repositories only) But don't GitHub's Protected Branches already do this? Most CI systems, like Travis, Jenkins, and GitHub Actions both run the test suite on every branch after it's pushed to and every pull request when it's opened, and GitHub can block the pull requests if the tests fail on them. To understand why this is insufficient to get an evergreen main branch, imagine this: Pull Request #1: Rename bifurcate() to bifurcateCrab() Change the name of this function, as well as every call site that currently exists in the main branch. I've thought of making it a method on Crab instead of on Sword, but then it would be bifurcateWithSword() , which hardly seems like an improvement. Pull Request #2: bifurcate() after landing, in addition to before Adds another call to bifurcate() , to make sure it gets done even if we skip the pre-landing procedure. When both of these pull requests are sitting open in the backlog, they will both be tested with the main branch. Assuming they both pass, GitHub will happily present the Big Green Merge Button. Once they both get merged, the main branch will go red (Method bifurcate() not found). In addition to the testing requirements, GitHub can also be set to block pull requests that are not &quot;up to date&quot; with the main branch, meaning that problems like this can show up. This fixes the problem, by requiring that the main branch only contain a snapshot of the code that has passed the tests, but it requires maintainers to manually: &quot;Update the pull requests,&quot; merging them onto main without changing main itself Wait for the test suite to finish Merge the pull request when it's done, which is a trivial operation that can't break the test suite thanks to step 1 And it has to be done for every pull request one at a time. This is similar to, but less efficient than, the process that bors automates. Instead of merging, you add reviewed pull requests to a &quot;merge queue&quot; of pull requests that are tested against the main branch by copying it to a staging branch and merging into that. When the status of staging is determined (either pass or fail), bors reports the result back as a comment and merges staging into main if it was a pass. Then it goes on to the next one. Based on the assumption that the tests usually pass once they're r+-ed, bors actually tests them in batches (and bisects if a batch fails). Note that bors is not a replacement for your CI system. It just implements this workflow. How it works Bors is a GitHub Application , so (assuming you already have GitHub Actions set up), getting bors set up requires three steps: Add the app to your repo in GitHub. Click here to use the publicly hosted instance. Commit a bors.toml with these contents: status = [ &quot;ci&quot; ] Set up a workflow step with the same name. For example: ci - success : name : ci if : $ { { success ( ) } } needs : - exfmt - test runs - on : ubuntu - latest steps : - name : CI succeeded run : exit 0 To use it, you need to stop clicking the big green merge button, and instead leave a comment with this in it on any pull request that looks good to you: bors r + As commits are reviewed, bors lumps them into a queue of batches. If everything passes, there will just be two batches; the one that's running, and the one that's waiting to be run (and is accumulating more and more pull requests until it gets a chance to run). To run a batch, bors creates a merge commit, merging the main branch with all the pull requests that make up the batch. Instead of pushing the merge commit immediately, however, it will instead push it to the staging branch. They'll look like this: Merge #5 #7 #8 5 : Rename ` bifurcate ( ) ` to ` bifurcateCrab ( ) ` 7 : Call ` bifurcate ( ) ` in the ` onland ` event handler 8 : Fix crash in ` drive ( ) ` If the build passes, the main branch gets fast-forwarded to meet the staging branch. Since the main branch contains the exact contents that were just tested, bit-for-bit, it's not broken. (at least, not in any way that the automated tests are able to detect) If the build fails, bors will follow a strategy called &quot;bisecting&quot;. Namely, it splits the batch into two batches, and pushes those to the queue. In this example, the first batch will look like this: Merge #5 #7 5 : Rename ` bifurcate ( ) ` to ` bifurcateCrab ( ) ` 7 : Call ` bifurcate ( ) ` in the ` onland ` event handler This batch will still fail, because the second patch inserts a call to a function that the first patch removes. It will get bisected again, as a result. The second will still pass, though. Merge #8 8 : Fix crash in ` drive ( ) ` This one will work, causing it to land in the main branch, leaving the first two still in the backlog. Merge #5 5 : Rename ` bifurcate ( ) ` to ` bifurcateCrab ( ) ` This one will pass, since the PR it conflicts with (#7) is sitting behind it in the queue. Merge #7 7 : Call ` bifurcate ( ) ` in the ` onland ` event handler When a batch cannot be bisected (because it only contains one PR), it gets kicked back to the creator so they can fix it. Note that you can watch this process running on the dashboard page if you want. As a convenience, you can also run bors try , which will kick off a build the same way r+ would, but without actually pushing it to the main branch even if it does succeed. To help keep them separate, r+ merge commits go in staging and try builds go in trying . The original bors used a more simple system (it just tested one PR at a time all the time). The one-at-a-time strategy is O(N), where N is the total number of pull requests. The batching strategy is O(E log N), where N is again the total number of pull requests and E is the number of pull requests that fail. How to run it on your local machine If you're using a macOS or Linux command line with Docker on it, ./script/setup &amp;&amp; ./script/server will set up a local instance, with a mocked-out GitHub instance, using Docker to pull in all the underlying dependencies. The web server ends up running on http://localhost:8000/ . You can get an Elixir REPL running in the same context as the webserver by running repl instead of server . To run the tests, run test instead of server . If you log in, it will log you in with the user &quot;space.&quot; There won't be any repositories, and space will not have admin perms. You can use the User model to give space admin rights, and the WebhookController and GitHub ServerMock to create the repo.","ref":"readme.html","title":"A merge bot for GitHub pull requests","type":"extras"},{"doc":"The main things you'll need to run Bors on your laptop are: Familiarity with the command line Elixir, with a full installation of OTP (the esl-erlang package is sufficient) PostgreSQL; the configuration for it is in config/dev.exs Stock C compilation tools, because some of bors's dependencies use NIFs A git client, which you probably already have for downloading this repository NodeJS, to perform asset compilation I use Portable PostgreSQL , the Chocolatey packages for Elixir, Git, and NodeJS, and the Visual C++ build tools from Microsoft. You can then run it using mix : $ mix ecto . create $ mix ecto . migrate $ mix phx . server And it'll run with the GitHub API mocked-out. To run tests, run: $ mix test $ mix dogma $ mix dialyzer How to set up your own real instance","ref":"readme.html#setting-it-up-without-docker-like-on-windows-home-edition","title":"A merge bot for GitHub pull requests - Setting it up without Docker, like on Windows home edition","type":"extras"},{"doc":"The first step is to register a new Github App on the GitHub web site. App settings The Github App name , description , and homepage URL are irrelevant, though I suggest pointing the homepage at the dashboard page. The user authorization callback URL should be at &lt;DASHBOARD URL&gt;/auth/github/callback . Leave the setup URL blank. The webhook URL should be at &lt;DASHBOARD URL&gt;/webhook/github . The webhook secret should be a randomly generated string. The mix phx.gen.secret command will work awesomely for this. Keep this handy to specify the same value in the bors configuration (you can also edit this value later if you need to). Required GitHub App permissions Permission summary For each of these sections, set the following overall section permissions and check the following webhook event checkboxes. Explanations for why bors-ng needs each of these permissions are below. Repository metadata : Read-only (no choice) Repository (Repository created, deleted, publicized, or privatized) Repository administration : No access Commit statuses : Read &amp; write Status (Commit status updated from the API) Deployments : No access Issues : Read &amp; write Issue comment (Issue comment created, edited, or deleted) Pages : No access Pull requests : Read &amp; write Pull request (Pull request opened, closed, reopened, edited, assigned, unassigned, review requested, review request removed, labeled, unlabeled, or synchronized) Pull request review (Pull request review submitted, edited, or dismissed) Pull request review comment (Pull request diff comment created, edited, or deleted) Repository contents : Read &amp; write (no checkboxes) Single file : No access Repository projects : No access Organization members : Read-only Team (Team is created, deleted, edited, added to/removed from a repository) Member (Collaborator added to, removed from, or has changed permissions for a repository) Membership (Team membership added or removed) Organization ( User invited to, added to, or removed from an organization) Organization projects : No access Checks : Read &amp; Write Check run (Check run created from the API) Check suite (Check suite created from the API) Permission explanations Repository metadata will be read-only. Must be set to receive Repository events to automatically remove entries from our database when a repo is deleted. Commit statuses must be set to Read &amp; write to report a testing status (this is the older version). Also must get Status events to integrate with CI systems that report their status via GitHub. Issues must be set to Read &amp; write because pull requests are issues. Issue comment events must be enabled to get the &quot;bors r+&quot; comments. If Issues is set to Read-only, repos will end up with pull requests that are marked as simultaneously merged and opened. Pull requests must be set to Read &amp; write to be able to post pull request comments. Also, must receive Pull request events to be able to keep the dashboard working, and must get Pull request review and Pull request review comment events to get those kinds of comments. Repository contents must be set to Read &amp; write to be able to create merge commits. Checks must be set to Read &amp; write to report a testing status (this is the newer version). Also must get Check run events to integrate with CI systems that report their status via GitHub. Organization members must be set to Read only to synchronize repository contributors and bors reviewers. After you click the &quot;Create&quot; button GitHub will send a &quot;ping&quot; notification to your webhook endpoint. Since bors is not actually running yet, that will fail. This is expected. You'll need the following values from your GitHub App for configuring bors-ng: Private key (generate one and download the file) OAuth credentials ID (appears beneath the app logo and &quot;Owned by&quot; in the right hand column) Internal app? GitHub Apps can be set as &quot;Internal&quot; or &quot;External&quot;. When the App is set to be internal, then whichever organization/user it belongs to will be the only one allowed to install it. This setting can be chosen while first creating the app, or it can be changed afterward at one of these URLs (the switch is on the bottom of the page): If the app is owned by an organization: https://github.com/organizations/&lt;ORGANIZATION&gt;/settings/apps/&lt;APP NAME&gt;/advanced If the app is owned by a user: https://github.com/settings/apps/&lt;APP NAME&gt;/advanced If an &quot;External&quot; app is installed on any external repositories, then the &quot;Make Internal&quot; button will be grayed out.","ref":"readme.html#step-1-register-a-new-github-app","title":"A merge bot for GitHub pull requests - Step 1: Register a new GitHub App","type":"extras"},{"doc":"bors-ng is written in the Elixir programming language, and it uses PostgreSQL as the backend database. Whatever machine you plan to run it on needs to have both of those installed. bors-ng is built on the Phoenix web framework, and they have docs on how to deploy phoenix apps already. Where you deploy will determine what the dashboard URL will be, which is needed in the previous steps, so this decision needs to be made before you can set up the Github App. You'll need to edit the configuration with a few bors-specific variables. Deploying on Heroku (and other 12-factor-style systems) The config file in the repository is already set up to pull the needed information from the environment, so you can configure bors by setting the right env variables and deploy the app from this repository into Heroku: You can do using Heroku's one-button-deploy system: Or you can do it manually: Note : The GITHUB_INTEGRATION_ID is now called the App ID on GitHub. $ heroku create -- buildpack &quot;https://github.com/HashNuke/heroku-buildpack-elixir.git&quot; bors - app $ heroku buildpacks :add https :/ / github . com / gjaldon / heroku - buildpack - phoenix - static . git $ heroku addons :create heroku - postgresql :hobby - dev $ heroku config :set \\ MIX_ENV = prod \\ POOL_SIZE = 18 \\ PUBLIC_HOST = bors - app . herokuapp . com \\ ALLOW_PRIVATE_REPOS = true \\ COMMAND_TRIGGER = bors \\ SECRET_KEY_BASE = &lt; SECRET1 &gt; \\ GITHUB_CLIENT_ID = &lt; OAUTH_CLIENT_ID &gt; \\ GITHUB_CLIENT_SECRET = &lt; OAUTH_CLIENT_SECRET &gt; \\ GITHUB_INTEGRATION_ID = &lt; ISS &gt; \\ GITHUB_INTEGRATION_PEM = ` base64 - w0 priv . pem ` \\ GITHUB_WEBHOOK_SECRET = &lt; SECRET2 &gt; $ git push heroku master $ heroku run &#39;POOL_SIZE=1 mix ecto.migrate&#39; WARNING : bors-ng stores some short-term state inside the web dyno (it uses a sleeping process to implement delays, specifically). It can recover the information after restarting, but it will not work correctly with Heroku's replication system. If you need more throughput than one dyno can provide, you should deploy using a system that allows Erlang clustering to work. Deploying using Docker (and compatible container orchestration systems) Pre-built Docker images are available at Docker Hub for tags and the current master (as bors-ng:latest ). The Dockerfile in the project root can be used to build the image yourself. It relies on multi-stage builds as introduced in Docker 17.05, to generate a slim image without the Erlang, Elixir and NodeJS development tools. Most of the important configuration options should be set at runtime using environment variables, not unlike the Heroku instructions. All the same recommendations apply, with some extra notes: ELIXIR_VERSION can be set as a build-time argument. Its default value is defined in the Dockerfile . ALLOW_PRIVATE_REPOS must be set at both build and run times to take effect. It is set to true by default. DATABASE_URL must contain the database port, as it will be used at container startup to wait until the database is reachable. The format is documented here . DATABASE_TIMEOUT may be set higher than the default of 15_000 (ms). This may be necessary with repositories with a very large amount of members. The database schema will be automatically created and migrated at container startup, unless the DATABASE_AUTO_MIGRATE env. var. is set to false . Make that change if the database state is managed externally, or if you are using a database that cannot safely handle concurrent schema changes (such as older MariaDB/MySQL versions). Database migrations can be manually applied from a container using the migrate release command. Example: docker run borsng/bors-ng:latest /app/bors/bin/bors migrate . Unfortunately other mix tasks are not available, as they cannot be run from compiled releases. The PORT environment variable is set to 4000 by default. GITHUB_URL_ROOT_API and GITHUB_URL_ROOT_HTML should allow you to connect bors-ng to an instance of GitHub Enterprise. Note: I've never actually used GitHub Enterprise, so I'm kinda guessing about what you'd need here. docker create -- name bors -- restart = unless - stopped \\ - e PUBLIC_HOST = app . bors . tech \\ - e SECRET_KEY_BASE = &lt; secret &gt; \\ - e GITHUB_CLIENT_ID = &lt; secret &gt; \\ - e GITHUB_CLIENT_SECRET = &lt; secret &gt; \\ - e GITHUB_INTEGRATION_ID = &lt; secret &gt; \\ - e GITHUB_INTEGRATION_PEM = &lt; secret &gt; \\ - e GITHUB_WEBHOOK_SECRET = &lt; secret &gt; \\ - e DATABASE_URL = &quot;postgresql://postgres:&lt;secret&gt;@db:5432/bors_ng&quot; \\ - e DATABASE_USE_SSL = false \\ - e DATABASE_AUTO_MIGRATE = true \\ - e COMMAND_TRIGGER = bors \\ borsng / bors - ng docker start bors Deploying on your own cluster Your configuration can be done by modifying config/prod.secret.exs .","ref":"readme.html#step-2-set-up-the-server","title":"A merge bot for GitHub pull requests - Step 2: Set up the server","type":"extras"},{"doc":"bors-ng offers a number of special functions for &quot;administrator&quot; users, including diagnostics and the ability to open a repo dashboard without being a reviewer. However, there's no UI for adding admins; you'll have to go into Postgres yourself to do it. There's two ways to do that: You can do it from the iex prompt, like this: shell $ iex - S mix # or `heroku run bash -c &quot;POOL_SIZE=1 iex -S mix&quot;` iex&gt; me = BorsNG.Database.Repo . get_by! BorsNG.Database.User , login : &quot;&lt;your login&gt;&quot; iex&gt; BorsNG.Database.Repo . update! BorsNG.Database.User . changeset ( me , %{ is_admin : true } ) You can do it from a PostgreSQL prompt like this: postgres = # \\c bors_dev -- or bors_prod bors_dev = # update users set is_admin = true where login = &#39;&lt;your login&gt;&#39;; Copyright license bors-ng is licensed under the Apache license, version 2.0. It should be included with the source distribution in LICENSE-APACHE. If it is missing, it is at http://www.apache.org/licenses/LICENSE-2.0 .","ref":"readme.html#optional-step-3-make-yourself-an-admin","title":"A merge bot for GitHub pull requests - Optional step 3: make yourself an admin","type":"extras"}]